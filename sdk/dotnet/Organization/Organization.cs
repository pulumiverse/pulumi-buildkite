// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Buildkite.Organization
{
    /// <summary>
    /// This resource allows you to manage the settings for an organization.
    /// 
    /// The user of your API token must be an organization administrator to manage organization settings.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Buildkite = Pulumiverse.Buildkite;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // allow api access only from 1.1.1.1 and enforce 2fa for all members
    ///     var settings = new Buildkite.Organization.Organization("settings", new()
    ///     {
    ///         AllowedApiIpAddresses = new[]
    ///         {
    ///             "1.1.1.1/32",
    ///         },
    ///         Enforce2fa = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// import the organization settings via the organization slug
    /// 
    /// ```sh
    /// $ pulumi import buildkite:Organization/organization:Organization settings &lt;organization slug&gt;
    /// ```
    /// </summary>
    [BuildkiteResourceType("buildkite:Organization/organization:Organization")]
    public partial class Organization : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of IP addresses in CIDR format that are allowed to access the Buildkite API.If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        /// </summary>
        [Output("allowedApiIpAddresses")]
        public Output<ImmutableArray<string>> AllowedApiIpAddresses { get; private set; } = null!;

        /// <summary>
        /// Sets whether the organization requires two-factor authentication for all members.
        /// </summary>
        [Output("enforce2fa")]
        public Output<bool> Enforce2fa { get; private set; } = null!;

        /// <summary>
        /// The UUID of the organization.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a Organization resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Organization(string name, OrganizationArgs? args = null, CustomResourceOptions? options = null)
            : base("buildkite:Organization/organization:Organization", name, args ?? new OrganizationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Organization(string name, Input<string> id, OrganizationState? state = null, CustomResourceOptions? options = null)
            : base("buildkite:Organization/organization:Organization", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-buildkite",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Organization resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Organization Get(string name, Input<string> id, OrganizationState? state = null, CustomResourceOptions? options = null)
        {
            return new Organization(name, id, state, options);
        }
    }

    public sealed class OrganizationArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedApiIpAddresses")]
        private InputList<string>? _allowedApiIpAddresses;

        /// <summary>
        /// A list of IP addresses in CIDR format that are allowed to access the Buildkite API.If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        /// </summary>
        public InputList<string> AllowedApiIpAddresses
        {
            get => _allowedApiIpAddresses ?? (_allowedApiIpAddresses = new InputList<string>());
            set => _allowedApiIpAddresses = value;
        }

        /// <summary>
        /// Sets whether the organization requires two-factor authentication for all members.
        /// </summary>
        [Input("enforce2fa")]
        public Input<bool>? Enforce2fa { get; set; }

        public OrganizationArgs()
        {
        }
        public static new OrganizationArgs Empty => new OrganizationArgs();
    }

    public sealed class OrganizationState : global::Pulumi.ResourceArgs
    {
        [Input("allowedApiIpAddresses")]
        private InputList<string>? _allowedApiIpAddresses;

        /// <summary>
        /// A list of IP addresses in CIDR format that are allowed to access the Buildkite API.If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        /// </summary>
        public InputList<string> AllowedApiIpAddresses
        {
            get => _allowedApiIpAddresses ?? (_allowedApiIpAddresses = new InputList<string>());
            set => _allowedApiIpAddresses = value;
        }

        /// <summary>
        /// Sets whether the organization requires two-factor authentication for all members.
        /// </summary>
        [Input("enforce2fa")]
        public Input<bool>? Enforce2fa { get; set; }

        /// <summary>
        /// The UUID of the organization.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public OrganizationState()
        {
        }
        public static new OrganizationState Empty => new OrganizationState();
    }
}
