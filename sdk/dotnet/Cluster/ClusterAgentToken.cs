// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Buildkite.Cluster
{
    /// <summary>
    /// A Cluster Agent Token is a token used to connect an agent to a cluster in Buildkite.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Buildkite = Pulumiverse.Buildkite;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // create a cluster
    ///     var primary = new Buildkite.Cluster.Cluster("primary", new()
    ///     {
    ///         Description = "Runs the monolith build and deploy",
    ///         Emoji = "ðŸš€",
    ///         Color = "#bada55",
    ///     });
    /// 
    ///     // create an agent token for the cluster
    ///     var defaultClusterAgentToken = new Buildkite.Cluster.ClusterAgentToken("defaultClusterAgentToken", new()
    ///     {
    ///         Description = "Default cluster token",
    ///         ClusterId = primary.Id,
    ///     });
    /// 
    ///     var ipLimitedToken = new Buildkite.Cluster.ClusterAgentToken("ipLimitedToken", new()
    ///     {
    ///         Description = "Token with allowed IP range",
    ///         ClusterId = primary.Id,
    ///         AllowedIpAddresses = new[]
    ///         {
    ///             "10.100.1.0/28",
    ///         },
    ///     });
    /// 
    ///     var monolith = new Buildkite.Pipeline.Pipeline("monolith", new()
    ///     {
    ///         Repository = "https://github.com/...",
    ///         ClusterId = primary.Id,
    ///     });
    /// 
    ///     var defaultClusterQueue = new Buildkite.Cluster.ClusterQueue("defaultClusterQueue", new()
    ///     {
    ///         ClusterId = primary.Id,
    ///         Key = "default",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [BuildkiteResourceType("buildkite:Cluster/clusterAgentToken:ClusterAgentToken")]
    public partial class ClusterAgentToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of CIDR-notation IPv4 addresses from which agents can use this Cluster Agent Token.If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        /// </summary>
        [Output("allowedIpAddresses")]
        public Output<ImmutableArray<string>> AllowedIpAddresses { get; private set; } = null!;

        /// <summary>
        /// The GraphQL ID of the Cluster that this Cluster Agent Token belongs to.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The UUID of the Cluster that this token belongs to.
        /// </summary>
        [Output("clusterUuid")]
        public Output<string> ClusterUuid { get; private set; } = null!;

        /// <summary>
        /// A description about what this cluster agent token is used for.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The token value used by an agent to register with the API.
        /// </summary>
        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        /// <summary>
        /// The UUID of the token.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterAgentToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterAgentToken(string name, ClusterAgentTokenArgs args, CustomResourceOptions? options = null)
            : base("buildkite:Cluster/clusterAgentToken:ClusterAgentToken", name, args ?? new ClusterAgentTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterAgentToken(string name, Input<string> id, ClusterAgentTokenState? state = null, CustomResourceOptions? options = null)
            : base("buildkite:Cluster/clusterAgentToken:ClusterAgentToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-buildkite",
                AdditionalSecretOutputs =
                {
                    "token",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterAgentToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterAgentToken Get(string name, Input<string> id, ClusterAgentTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterAgentToken(name, id, state, options);
        }
    }

    public sealed class ClusterAgentTokenArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedIpAddresses")]
        private InputList<string>? _allowedIpAddresses;

        /// <summary>
        /// A list of CIDR-notation IPv4 addresses from which agents can use this Cluster Agent Token.If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        /// </summary>
        public InputList<string> AllowedIpAddresses
        {
            get => _allowedIpAddresses ?? (_allowedIpAddresses = new InputList<string>());
            set => _allowedIpAddresses = value;
        }

        /// <summary>
        /// The GraphQL ID of the Cluster that this Cluster Agent Token belongs to.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// A description about what this cluster agent token is used for.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        public ClusterAgentTokenArgs()
        {
        }
        public static new ClusterAgentTokenArgs Empty => new ClusterAgentTokenArgs();
    }

    public sealed class ClusterAgentTokenState : global::Pulumi.ResourceArgs
    {
        [Input("allowedIpAddresses")]
        private InputList<string>? _allowedIpAddresses;

        /// <summary>
        /// A list of CIDR-notation IPv4 addresses from which agents can use this Cluster Agent Token.If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        /// </summary>
        public InputList<string> AllowedIpAddresses
        {
            get => _allowedIpAddresses ?? (_allowedIpAddresses = new InputList<string>());
            set => _allowedIpAddresses = value;
        }

        /// <summary>
        /// The GraphQL ID of the Cluster that this Cluster Agent Token belongs to.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The UUID of the Cluster that this token belongs to.
        /// </summary>
        [Input("clusterUuid")]
        public Input<string>? ClusterUuid { get; set; }

        /// <summary>
        /// A description about what this cluster agent token is used for.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// The token value used by an agent to register with the API.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The UUID of the token.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public ClusterAgentTokenState()
        {
        }
        public static new ClusterAgentTokenState Empty => new ClusterAgentTokenState();
    }
}
