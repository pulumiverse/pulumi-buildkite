// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Buildkite.Cluster
{
    public static class GetCluster
    {
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("buildkite:Cluster/getCluster:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("buildkite:Cluster/getCluster:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster to lookup.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetClusterArgs()
        {
        }
        public static new GetClusterArgs Empty => new GetClusterArgs();
    }

    public sealed class GetClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the cluster to lookup.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
        public static new GetClusterInvokeArgs Empty => new GetClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The color given the cluster.
        /// </summary>
        public readonly string Color;
        /// <summary>
        /// The description of the cluster.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The emoji given the cluster.
        /// </summary>
        public readonly string Emoji;
        /// <summary>
        /// The GraphQL ID of the cluster.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// The UUID of the cluster.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetClusterResult(
            string color,

            string description,

            string emoji,

            string id,

            string name,

            string uuid)
        {
            Color = color;
            Description = description;
            Emoji = emoji;
            Id = id;
            Name = name;
            Uuid = uuid;
        }
    }
}
