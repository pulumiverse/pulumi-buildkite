// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Buildkite.Pipeline
{
    /// <summary>
    /// This resource allows for standardized step configurations that can be used within various pipelines of an organization.
    /// 
    /// More information on pipeline templates can be found in the [documentation](https://buildkite.com/docs/pipelines/templates).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Buildkite = Pulumiverse.Buildkite;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var templateRequired = new Buildkite.Pipeline.Template("templateRequired", new()
    ///     {
    ///         Configuration = @"steps:
    ///   - label: "":pipeline:""
    ///     command: ""buildkite-agent pipeline upload .buildkite/pipeline-qa.yml""
    /// 
    /// ",
    ///     });
    /// 
    ///     var templateFull = new Buildkite.Pipeline.Template("templateFull", new()
    ///     {
    ///         Available = true,
    ///         Configuration = @"steps:
    ///   - label: "":pipeline:""
    ///     command: ""buildkite-agent pipeline upload .buildkite/pipeline-production.yml""
    /// 
    /// ",
    ///         Description = "Production upload template",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// import a pipeline template resource using the templates GraphQL ID
    /// 
    /// # 
    /// 
    ///  You can use this query to find the first 50 templates (adjust for less or more):
    /// 
    ///  query getPipelineTemplateIds {
    /// 
    ///  organization(slug: "ORGANIZATION_SLUG") {
    /// 
    ///  pipelineTemplates(first: 50) {
    /// 
    ///  edges{
    /// 
    ///  node{
    /// 
    ///  id
    /// 
    ///  name
    /// 
    ///  }
    /// 
    ///  }
    /// 
    ///  }
    /// 
    ///  }
    /// 
    ///  }
    /// 
    /// ```sh
    /// $ pulumi import buildkite:Pipeline/template:Template template UGlwZWxpbmVUZW1wbGF0ZS0tLWU0YWQ3YjdjLTljZDYtNGM0MS1hYWE0LTY2ZmI3ODY0MTMwNw==
    /// ```
    /// </summary>
    [BuildkiteResourceType("buildkite:Pipeline/template:Template")]
    public partial class Template : global::Pulumi.CustomResource
    {
        /// <summary>
        /// If the pipeline template is available for assignment by non admin users.
        /// </summary>
        [Output("available")]
        public Output<bool> Available { get; private set; } = null!;

        /// <summary>
        /// The YAML step configuration for the pipeline template.
        /// </summary>
        [Output("configuration")]
        public Output<string> Configuration { get; private set; } = null!;

        /// <summary>
        /// A description for the pipeline template.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the pipeline template.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The UUID of the pipeline template.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a Template resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Template(string name, TemplateArgs args, CustomResourceOptions? options = null)
            : base("buildkite:Pipeline/template:Template", name, args ?? new TemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Template(string name, Input<string> id, TemplateState? state = null, CustomResourceOptions? options = null)
            : base("buildkite:Pipeline/template:Template", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse/pulumi-buildkite",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Template resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Template Get(string name, Input<string> id, TemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new Template(name, id, state, options);
        }
    }

    public sealed class TemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the pipeline template is available for assignment by non admin users.
        /// </summary>
        [Input("available")]
        public Input<bool>? Available { get; set; }

        /// <summary>
        /// The YAML step configuration for the pipeline template.
        /// </summary>
        [Input("configuration", required: true)]
        public Input<string> Configuration { get; set; } = null!;

        /// <summary>
        /// A description for the pipeline template.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the pipeline template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public TemplateArgs()
        {
        }
        public static new TemplateArgs Empty => new TemplateArgs();
    }

    public sealed class TemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If the pipeline template is available for assignment by non admin users.
        /// </summary>
        [Input("available")]
        public Input<bool>? Available { get; set; }

        /// <summary>
        /// The YAML step configuration for the pipeline template.
        /// </summary>
        [Input("configuration")]
        public Input<string>? Configuration { get; set; }

        /// <summary>
        /// A description for the pipeline template.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the pipeline template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The UUID of the pipeline template.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public TemplateState()
        {
        }
        public static new TemplateState Empty => new TemplateState();
    }
}
