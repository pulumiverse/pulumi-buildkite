# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['SettingsArgs', 'Settings']

@pulumi.input_type
class SettingsArgs:
    def __init__(__self__, *,
                 allowed_api_ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a Settings resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] allowed_api_ip_addresses: A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        """
        if allowed_api_ip_addresses is not None:
            pulumi.set(__self__, "allowed_api_ip_addresses", allowed_api_ip_addresses)

    @property
    @pulumi.getter(name="allowedApiIpAddresses")
    def allowed_api_ip_addresses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        """
        return pulumi.get(self, "allowed_api_ip_addresses")

    @allowed_api_ip_addresses.setter
    def allowed_api_ip_addresses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "allowed_api_ip_addresses", value)


@pulumi.input_type
class _SettingsState:
    def __init__(__self__, *,
                 allowed_api_ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 uuid: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Settings resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] allowed_api_ip_addresses: A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        """
        if allowed_api_ip_addresses is not None:
            pulumi.set(__self__, "allowed_api_ip_addresses", allowed_api_ip_addresses)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)

    @property
    @pulumi.getter(name="allowedApiIpAddresses")
    def allowed_api_ip_addresses(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        """
        return pulumi.get(self, "allowed_api_ip_addresses")

    @allowed_api_ip_addresses.setter
    def allowed_api_ip_addresses(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "allowed_api_ip_addresses", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)


class Settings(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allowed_api_ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        ## # Resource: organization_settings

        This resource allows you to manage the settings for an organization.

        You must be an organization administrator to manage organization settings.

        Note: The "Allowed API IP Addresses" feature must be enabled on your organization in order to manage the `allowed_api_ip_addresses` attribute.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_buildkite as buildkite

        test_settings = buildkite.organization.Settings("testSettings", allowed_api_ip_addresses=["1.1.1.1/32"])
        ```

        ## Import

        Organization settings can be imported by passing the organization slug to the import command, along with the identifier of the resource.

        ```sh
         $ pulumi import buildkite:Organization/settings:Settings test_settings test_org
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] allowed_api_ip_addresses: A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[SettingsArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## # Resource: organization_settings

        This resource allows you to manage the settings for an organization.

        You must be an organization administrator to manage organization settings.

        Note: The "Allowed API IP Addresses" feature must be enabled on your organization in order to manage the `allowed_api_ip_addresses` attribute.

        ## Example Usage

        ```python
        import pulumi
        import pulumiverse_buildkite as buildkite

        test_settings = buildkite.organization.Settings("testSettings", allowed_api_ip_addresses=["1.1.1.1/32"])
        ```

        ## Import

        Organization settings can be imported by passing the organization slug to the import command, along with the identifier of the resource.

        ```sh
         $ pulumi import buildkite:Organization/settings:Settings test_settings test_org
        ```

        :param str resource_name: The name of the resource.
        :param SettingsArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SettingsArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allowed_api_ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SettingsArgs.__new__(SettingsArgs)

            __props__.__dict__["allowed_api_ip_addresses"] = allowed_api_ip_addresses
            __props__.__dict__["uuid"] = None
        super(Settings, __self__).__init__(
            'buildkite:Organization/settings:Settings',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allowed_api_ip_addresses: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            uuid: Optional[pulumi.Input[str]] = None) -> 'Settings':
        """
        Get an existing Settings resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] allowed_api_ip_addresses: A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SettingsState.__new__(_SettingsState)

        __props__.__dict__["allowed_api_ip_addresses"] = allowed_api_ip_addresses
        __props__.__dict__["uuid"] = uuid
        return Settings(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="allowedApiIpAddresses")
    def allowed_api_ip_addresses(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).
        """
        return pulumi.get(self, "allowed_api_ip_addresses")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        return pulumi.get(self, "uuid")

