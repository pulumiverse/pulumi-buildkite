# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetMetaResult',
    'AwaitableGetMetaResult',
    'get_meta',
    'get_meta_output',
]

@pulumi.output_type
class GetMetaResult:
    """
    A collection of values returned by getMeta.
    """
    def __init__(__self__, id=None, webhook_ips=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if webhook_ips and not isinstance(webhook_ips, list):
            raise TypeError("Expected argument 'webhook_ips' to be a list")
        pulumi.set(__self__, "webhook_ips", webhook_ips)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Fixed value: `https://api.buildkite.com/v2/meta`.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="webhookIps")
    def webhook_ips(self) -> Sequence[str]:
        """
        List of IPs in CIDR format.
        """
        return pulumi.get(self, "webhook_ips")


class AwaitableGetMetaResult(GetMetaResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetMetaResult(
            id=self.id,
            webhook_ips=self.webhook_ips)


def get_meta(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetMetaResult:
    """
    Use this data source to look up the source IP addresses that Buildkite may use to send external requests,
    including webhooks and API calls to source control systems (like GitHub Enterprise Server and BitBucket Server).

    More info in the Buildkite [documentation](https://buildkite.com/docs/apis/rest-api/meta).

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_aws as aws
    import pulumi_buildkite as buildkite

    ips = buildkite.get_meta()
    # Create an AWS security group allowing ingress from Buildkite
    from_buildkite = aws.ec2.SecurityGroup("fromBuildkite", ingress=[aws.ec2.SecurityGroupIngressArgs(
        from_port="*",
        to_port=443,
        protocol="tcp",
        cidr_blocks=ips.webhook_ips,
    )])
    ```
    <!--End PulumiCodeChooser -->
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('buildkite:index/getMeta:getMeta', __args__, opts=opts, typ=GetMetaResult).value

    return AwaitableGetMetaResult(
        id=pulumi.get(__ret__, 'id'),
        webhook_ips=pulumi.get(__ret__, 'webhook_ips'))


@_utilities.lift_output_func(get_meta)
def get_meta_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetMetaResult]:
    """
    Use this data source to look up the source IP addresses that Buildkite may use to send external requests,
    including webhooks and API calls to source control systems (like GitHub Enterprise Server and BitBucket Server).

    More info in the Buildkite [documentation](https://buildkite.com/docs/apis/rest-api/meta).

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_aws as aws
    import pulumi_buildkite as buildkite

    ips = buildkite.get_meta()
    # Create an AWS security group allowing ingress from Buildkite
    from_buildkite = aws.ec2.SecurityGroup("fromBuildkite", ingress=[aws.ec2.SecurityGroupIngressArgs(
        from_port="*",
        to_port=443,
        protocol="tcp",
        cidr_blocks=ips.webhook_ips,
    )])
    ```
    <!--End PulumiCodeChooser -->
    """
    ...
