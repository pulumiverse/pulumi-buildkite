// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## # Data Source: team
 *
 * Use this data source to look up properties of a team. This can be used to
 * validate that a team exists before setting the team slug on a pipeline.
 *
 * Buildkite documentation: https://buildkite.com/docs/pipelines/permissions
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as buildkite from "@pulumi/buildkite";
 *
 * const myTeamData = buildkite.Team.getTeam({
 *     id: "<team id>",
 * });
 * ```
 */
export function getTeam(args?: GetTeamArgs, opts?: pulumi.InvokeOptions): Promise<GetTeamResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buildkite:Team/getTeam:getTeam", {
        "id": args.id,
        "slug": args.slug,
    }, opts);
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamArgs {
    /**
     * The GraphQL ID of the team, available in the Settings page for the team.
     */
    id?: string;
    /**
     * The slug of the team. Available in the URL of the team on buildkite.com; in the format
     * "<organizaton/team-name>"
     *
     * The `team` data-source supports **either** the use of `id` or `slug` for lookup of a team.
     */
    slug?: string;
}

/**
 * A collection of values returned by getTeam.
 */
export interface GetTeamResult {
    /**
     * Default role to assign to a team member
     */
    readonly defaultMemberRole: string;
    /**
     * Whether new org members will be automatically added to this team
     */
    readonly defaultTeam: boolean;
    /**
     * A description of the team
     */
    readonly description: string;
    /**
     * The GraphQL ID of the team
     */
    readonly id: string;
    /**
     * Whether team members can create new pipelines and add them to the team
     */
    readonly membersCanCreatePipelines: boolean;
    /**
     * The name of the team
     */
    readonly name: string;
    /**
     * Whether the team is visible to org members outside this team
     */
    readonly privacy: string;
    readonly slug: string;
    /**
     * The UUID of the team
     */
    readonly uuid: string;
}
/**
 * ## # Data Source: team
 *
 * Use this data source to look up properties of a team. This can be used to
 * validate that a team exists before setting the team slug on a pipeline.
 *
 * Buildkite documentation: https://buildkite.com/docs/pipelines/permissions
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as buildkite from "@pulumi/buildkite";
 *
 * const myTeamData = buildkite.Team.getTeam({
 *     id: "<team id>",
 * });
 * ```
 */
export function getTeamOutput(args?: GetTeamOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTeamResult> {
    return pulumi.output(args).apply((a: any) => getTeam(a, opts))
}

/**
 * A collection of arguments for invoking getTeam.
 */
export interface GetTeamOutputArgs {
    /**
     * The GraphQL ID of the team, available in the Settings page for the team.
     */
    id?: pulumi.Input<string>;
    /**
     * The slug of the team. Available in the URL of the team on buildkite.com; in the format
     * "<organizaton/team-name>"
     *
     * The `team` data-source supports **either** the use of `id` or `slug` for lookup of a team.
     */
    slug?: pulumi.Input<string>;
}
