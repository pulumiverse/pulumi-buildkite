// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to sign pipeline steps with a JWKS key. You will need to have
 * the corresponding verification key present on the agents that run this the steps in
 * this pipeline. You can then use these steps in a `buildkite.Pipeline.Pipeline` resource.
 *
 * See [RFC 7517](https://datatracker.ietf.org/doc/html/rfc7517) for more information
 * about the JWKS format.
 *
 * See the Buildkite [documentation](https://buildkite.com/docs/agent/v3/signed_pipelines)
 * for more info about signed pipelines.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as buildkite from "@pulumi/buildkite";
 * import * as buildkite from "@pulumiverse/buildkite";
 *
 * const repository = "git@github.com:my-org/my-repo.git";
 * const my-steps = buildkite.Pipeline.getSignedSteps({
 *     repository: repository,
 *     jwksFile: "/path/to/my/jwks.json",
 *     jwksKeyId: "my-key",
 *     unsignedSteps: `steps:
 * - label: ":pipeline:"
 *   command: buildkite-agent pipeline upload
 * `,
 * });
 * const my_pipeline = new buildkite.pipeline.Pipeline("my-pipeline", {
 *     repository: repository,
 *     steps: my_steps.then(my_steps => my_steps.steps),
 * });
 * ```
 */
export function getSignedSteps(args: GetSignedStepsArgs, opts?: pulumi.InvokeOptions): Promise<GetSignedStepsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buildkite:Pipeline/getSignedSteps:getSignedSteps", {
        "jwks": args.jwks,
        "jwksFile": args.jwksFile,
        "jwksKeyId": args.jwksKeyId,
        "repository": args.repository,
        "unsignedSteps": args.unsignedSteps,
    }, opts);
}

/**
 * A collection of arguments for invoking getSignedSteps.
 */
export interface GetSignedStepsArgs {
    /**
     * The JSON Web Key Set (JWKS) to use for signing.
     * If `jwksKeyId` is not specified, and the set contains exactly one key, that key will
     * be used.
     */
    jwks?: string;
    jwksFile?: string;
    jwksKeyId?: string;
    /**
     * The repository that will be checked out in a build of the pipeline.
     */
    repository: string;
    /**
     * The steps to sign in YAML format.
     */
    unsignedSteps: string;
}

/**
 * A collection of values returned by getSignedSteps.
 */
export interface GetSignedStepsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The JSON Web Key Set (JWKS) to use for signing.
     * If `jwksKeyId` is not specified, and the set contains exactly one key, that key will
     * be used.
     */
    readonly jwks?: string;
    readonly jwksFile?: string;
    readonly jwksKeyId?: string;
    /**
     * The repository that will be checked out in a build of the pipeline.
     */
    readonly repository: string;
    readonly steps: string;
    /**
     * The steps to sign in YAML format.
     */
    readonly unsignedSteps: string;
}
/**
 * Use this data source to sign pipeline steps with a JWKS key. You will need to have
 * the corresponding verification key present on the agents that run this the steps in
 * this pipeline. You can then use these steps in a `buildkite.Pipeline.Pipeline` resource.
 *
 * See [RFC 7517](https://datatracker.ietf.org/doc/html/rfc7517) for more information
 * about the JWKS format.
 *
 * See the Buildkite [documentation](https://buildkite.com/docs/agent/v3/signed_pipelines)
 * for more info about signed pipelines.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as buildkite from "@pulumi/buildkite";
 * import * as buildkite from "@pulumiverse/buildkite";
 *
 * const repository = "git@github.com:my-org/my-repo.git";
 * const my-steps = buildkite.Pipeline.getSignedSteps({
 *     repository: repository,
 *     jwksFile: "/path/to/my/jwks.json",
 *     jwksKeyId: "my-key",
 *     unsignedSteps: `steps:
 * - label: ":pipeline:"
 *   command: buildkite-agent pipeline upload
 * `,
 * });
 * const my_pipeline = new buildkite.pipeline.Pipeline("my-pipeline", {
 *     repository: repository,
 *     steps: my_steps.then(my_steps => my_steps.steps),
 * });
 * ```
 */
export function getSignedStepsOutput(args: GetSignedStepsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSignedStepsResult> {
    return pulumi.output(args).apply((a: any) => getSignedSteps(a, opts))
}

/**
 * A collection of arguments for invoking getSignedSteps.
 */
export interface GetSignedStepsOutputArgs {
    /**
     * The JSON Web Key Set (JWKS) to use for signing.
     * If `jwksKeyId` is not specified, and the set contains exactly one key, that key will
     * be used.
     */
    jwks?: pulumi.Input<string>;
    jwksFile?: pulumi.Input<string>;
    jwksKeyId?: pulumi.Input<string>;
    /**
     * The repository that will be checked out in a build of the pipeline.
     */
    repository: pulumi.Input<string>;
    /**
     * The steps to sign in YAML format.
     */
    unsignedSteps: pulumi.Input<string>;
}
