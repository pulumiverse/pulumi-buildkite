// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Pipelines can be imported using the `GraphQL ID` (not UUID), e.g.
 *
 * ```sh
 *  $ pulumi import buildkite:Pipeline/pipeline:Pipeline fleet UGlwZWxpbmUtLS00MzVjYWQ1OC1lODFkLTQ1YWYtODYzNy1iMWNmODA3MDIzOGQ=
 * ```
 *
 *  To find the ID to use, you can use the GraphQL query below. Alternatively, you could use this [pre-saved query](https://buildkite.com/user/graphql/console/04e6ac1d-222e-49f9-8167-4767ab0f5362). graphql query getPipelineId {
 *
 *  pipeline(slug"ORGANIZATION_SLUG/PIPELINE_SLUG") {
 *
 *  id
 *
 *  } }
 */
export class Pipeline extends pulumi.CustomResource {
    /**
     * Get an existing Pipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PipelineState, opts?: pulumi.CustomResourceOptions): Pipeline {
        return new Pipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'buildkite:Pipeline/pipeline:Pipeline';

    /**
     * Returns true if the given object is an instance of Pipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Pipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Pipeline.__pulumiType;
    }

    /**
     * A boolean on whether or not to allow rebuilds for the pipeline.
     */
    public readonly allowRebuilds!: pulumi.Output<boolean>;
    /**
     * @deprecated This attribute has been deprecated and will be removed in v0.27.0. Please use provider configuration `archive_pipeline_on_delete` instead.
     */
    public readonly archiveOnDelete!: pulumi.Output<boolean>;
    /**
     * The pipeline's last build status so you can display build status badge.
     */
    public /*out*/ readonly badgeUrl!: pulumi.Output<string>;
    /**
     * Limit which branches and tags cause new builds to be created, either via a code push or via the Builds REST API.
     */
    public readonly branchConfiguration!: pulumi.Output<string | undefined>;
    /**
     * A boolean to enable automatically cancelling any running builds on the same branch when a new build is created.
     */
    public readonly cancelIntermediateBuilds!: pulumi.Output<boolean>;
    /**
     * Limit which branches build cancelling applies to, for example !master will ensure that the master branch won't have its builds automatically cancelled.
     */
    public readonly cancelIntermediateBuildsBranchFilter!: pulumi.Output<string>;
    /**
     * The GraphQL ID of the cluster you want to use for the pipeline.
     */
    public readonly clusterId!: pulumi.Output<string | undefined>;
    /**
     * The default branch to prefill when new builds are created or triggered, usually main or master but can be anything.
     */
    public readonly defaultBranch!: pulumi.Output<string>;
    /**
     * The default timeout for commands in this pipeline, in minutes.
     */
    public readonly defaultTimeoutInMinutes!: pulumi.Output<number>;
    /**
     * **DEPRECATED** (Optional) Set to either `true` or `false`. When set to `true`, `destroy` actions on a pipeline will be blocked and fail with a message "Deletion protection is enabled for pipeline: <pipeline name>"
     *
     * @deprecated Deletion protection will be removed in a future release. A similar solution already exists and is supported by Terraform. See https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle.
     */
    public readonly deletionProtection!: pulumi.Output<boolean>;
    /**
     * A description of the pipeline.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The maximum timeout for commands in this pipeline, in minutes.
     */
    public readonly maximumTimeoutInMinutes!: pulumi.Output<number>;
    /**
     * The name of the pipeline.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Source control provider settings for the pipeline. See Provider Settings Configuration below for details.
     */
    public readonly providerSettings!: pulumi.Output<outputs.Pipeline.PipelineProviderSettings | undefined>;
    /**
     * The git URL of the repository.
     */
    public readonly repository!: pulumi.Output<string>;
    /**
     * A boolean to enable automatically skipping any unstarted builds on the same branch when a new build is created.
     */
    public readonly skipIntermediateBuilds!: pulumi.Output<boolean>;
    /**
     * Limit which branches build skipping applies to, for example `!master` will ensure that the master branch won't have its builds automatically skipped.
     */
    public readonly skipIntermediateBuildsBranchFilter!: pulumi.Output<string>;
    /**
     * The slug of the created pipeline.
     */
    public /*out*/ readonly slug!: pulumi.Output<string>;
    /**
     * The string YAML steps to run the pipeline. Defaults to `buildkite-agent pipeline upload` if not specified.
     */
    public readonly steps!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<string[]>;
    /**
     * **DEPRECATED** Set team access for the pipeline. Can be specified multiple times for each team.
     *
     * @deprecated This block is deprecated. Please use `buildkite_pipeline_team` instead.
     */
    public readonly teams!: pulumi.Output<outputs.Pipeline.PipelineTeam[] | undefined>;
    /**
     * The Buildkite webhook URL to configure on the repository to trigger builds on this pipeline.
     */
    public /*out*/ readonly webhookUrl!: pulumi.Output<string>;

    /**
     * Create a Pipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PipelineArgs | PipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PipelineState | undefined;
            resourceInputs["allowRebuilds"] = state ? state.allowRebuilds : undefined;
            resourceInputs["archiveOnDelete"] = state ? state.archiveOnDelete : undefined;
            resourceInputs["badgeUrl"] = state ? state.badgeUrl : undefined;
            resourceInputs["branchConfiguration"] = state ? state.branchConfiguration : undefined;
            resourceInputs["cancelIntermediateBuilds"] = state ? state.cancelIntermediateBuilds : undefined;
            resourceInputs["cancelIntermediateBuildsBranchFilter"] = state ? state.cancelIntermediateBuildsBranchFilter : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["defaultBranch"] = state ? state.defaultBranch : undefined;
            resourceInputs["defaultTimeoutInMinutes"] = state ? state.defaultTimeoutInMinutes : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["maximumTimeoutInMinutes"] = state ? state.maximumTimeoutInMinutes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["providerSettings"] = state ? state.providerSettings : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["skipIntermediateBuilds"] = state ? state.skipIntermediateBuilds : undefined;
            resourceInputs["skipIntermediateBuildsBranchFilter"] = state ? state.skipIntermediateBuildsBranchFilter : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
            resourceInputs["steps"] = state ? state.steps : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["teams"] = state ? state.teams : undefined;
            resourceInputs["webhookUrl"] = state ? state.webhookUrl : undefined;
        } else {
            const args = argsOrState as PipelineArgs | undefined;
            if ((!args || args.repository === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repository'");
            }
            resourceInputs["allowRebuilds"] = args ? args.allowRebuilds : undefined;
            resourceInputs["archiveOnDelete"] = args ? args.archiveOnDelete : undefined;
            resourceInputs["branchConfiguration"] = args ? args.branchConfiguration : undefined;
            resourceInputs["cancelIntermediateBuilds"] = args ? args.cancelIntermediateBuilds : undefined;
            resourceInputs["cancelIntermediateBuildsBranchFilter"] = args ? args.cancelIntermediateBuildsBranchFilter : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["defaultBranch"] = args ? args.defaultBranch : undefined;
            resourceInputs["defaultTimeoutInMinutes"] = args ? args.defaultTimeoutInMinutes : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["maximumTimeoutInMinutes"] = args ? args.maximumTimeoutInMinutes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["providerSettings"] = args ? args.providerSettings : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["skipIntermediateBuilds"] = args ? args.skipIntermediateBuilds : undefined;
            resourceInputs["skipIntermediateBuildsBranchFilter"] = args ? args.skipIntermediateBuildsBranchFilter : undefined;
            resourceInputs["steps"] = args ? args.steps : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["teams"] = args ? args.teams : undefined;
            resourceInputs["badgeUrl"] = undefined /*out*/;
            resourceInputs["slug"] = undefined /*out*/;
            resourceInputs["webhookUrl"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Pipeline.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Pipeline resources.
 */
export interface PipelineState {
    /**
     * A boolean on whether or not to allow rebuilds for the pipeline.
     */
    allowRebuilds?: pulumi.Input<boolean>;
    /**
     * @deprecated This attribute has been deprecated and will be removed in v0.27.0. Please use provider configuration `archive_pipeline_on_delete` instead.
     */
    archiveOnDelete?: pulumi.Input<boolean>;
    /**
     * The pipeline's last build status so you can display build status badge.
     */
    badgeUrl?: pulumi.Input<string>;
    /**
     * Limit which branches and tags cause new builds to be created, either via a code push or via the Builds REST API.
     */
    branchConfiguration?: pulumi.Input<string>;
    /**
     * A boolean to enable automatically cancelling any running builds on the same branch when a new build is created.
     */
    cancelIntermediateBuilds?: pulumi.Input<boolean>;
    /**
     * Limit which branches build cancelling applies to, for example !master will ensure that the master branch won't have its builds automatically cancelled.
     */
    cancelIntermediateBuildsBranchFilter?: pulumi.Input<string>;
    /**
     * The GraphQL ID of the cluster you want to use for the pipeline.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The default branch to prefill when new builds are created or triggered, usually main or master but can be anything.
     */
    defaultBranch?: pulumi.Input<string>;
    /**
     * The default timeout for commands in this pipeline, in minutes.
     */
    defaultTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * **DEPRECATED** (Optional) Set to either `true` or `false`. When set to `true`, `destroy` actions on a pipeline will be blocked and fail with a message "Deletion protection is enabled for pipeline: <pipeline name>"
     *
     * @deprecated Deletion protection will be removed in a future release. A similar solution already exists and is supported by Terraform. See https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * A description of the pipeline.
     */
    description?: pulumi.Input<string>;
    /**
     * The maximum timeout for commands in this pipeline, in minutes.
     */
    maximumTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The name of the pipeline.
     */
    name?: pulumi.Input<string>;
    /**
     * Source control provider settings for the pipeline. See Provider Settings Configuration below for details.
     */
    providerSettings?: pulumi.Input<inputs.Pipeline.PipelineProviderSettings>;
    /**
     * The git URL of the repository.
     */
    repository?: pulumi.Input<string>;
    /**
     * A boolean to enable automatically skipping any unstarted builds on the same branch when a new build is created.
     */
    skipIntermediateBuilds?: pulumi.Input<boolean>;
    /**
     * Limit which branches build skipping applies to, for example `!master` will ensure that the master branch won't have its builds automatically skipped.
     */
    skipIntermediateBuildsBranchFilter?: pulumi.Input<string>;
    /**
     * The slug of the created pipeline.
     */
    slug?: pulumi.Input<string>;
    /**
     * The string YAML steps to run the pipeline. Defaults to `buildkite-agent pipeline upload` if not specified.
     */
    steps?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * **DEPRECATED** Set team access for the pipeline. Can be specified multiple times for each team.
     *
     * @deprecated This block is deprecated. Please use `buildkite_pipeline_team` instead.
     */
    teams?: pulumi.Input<pulumi.Input<inputs.Pipeline.PipelineTeam>[]>;
    /**
     * The Buildkite webhook URL to configure on the repository to trigger builds on this pipeline.
     */
    webhookUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Pipeline resource.
 */
export interface PipelineArgs {
    /**
     * A boolean on whether or not to allow rebuilds for the pipeline.
     */
    allowRebuilds?: pulumi.Input<boolean>;
    /**
     * @deprecated This attribute has been deprecated and will be removed in v0.27.0. Please use provider configuration `archive_pipeline_on_delete` instead.
     */
    archiveOnDelete?: pulumi.Input<boolean>;
    /**
     * Limit which branches and tags cause new builds to be created, either via a code push or via the Builds REST API.
     */
    branchConfiguration?: pulumi.Input<string>;
    /**
     * A boolean to enable automatically cancelling any running builds on the same branch when a new build is created.
     */
    cancelIntermediateBuilds?: pulumi.Input<boolean>;
    /**
     * Limit which branches build cancelling applies to, for example !master will ensure that the master branch won't have its builds automatically cancelled.
     */
    cancelIntermediateBuildsBranchFilter?: pulumi.Input<string>;
    /**
     * The GraphQL ID of the cluster you want to use for the pipeline.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The default branch to prefill when new builds are created or triggered, usually main or master but can be anything.
     */
    defaultBranch?: pulumi.Input<string>;
    /**
     * The default timeout for commands in this pipeline, in minutes.
     */
    defaultTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * **DEPRECATED** (Optional) Set to either `true` or `false`. When set to `true`, `destroy` actions on a pipeline will be blocked and fail with a message "Deletion protection is enabled for pipeline: <pipeline name>"
     *
     * @deprecated Deletion protection will be removed in a future release. A similar solution already exists and is supported by Terraform. See https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * A description of the pipeline.
     */
    description?: pulumi.Input<string>;
    /**
     * The maximum timeout for commands in this pipeline, in minutes.
     */
    maximumTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The name of the pipeline.
     */
    name?: pulumi.Input<string>;
    /**
     * Source control provider settings for the pipeline. See Provider Settings Configuration below for details.
     */
    providerSettings?: pulumi.Input<inputs.Pipeline.PipelineProviderSettings>;
    /**
     * The git URL of the repository.
     */
    repository: pulumi.Input<string>;
    /**
     * A boolean to enable automatically skipping any unstarted builds on the same branch when a new build is created.
     */
    skipIntermediateBuilds?: pulumi.Input<boolean>;
    /**
     * Limit which branches build skipping applies to, for example `!master` will ensure that the master branch won't have its builds automatically skipped.
     */
    skipIntermediateBuildsBranchFilter?: pulumi.Input<string>;
    /**
     * The string YAML steps to run the pipeline. Defaults to `buildkite-agent pipeline upload` if not specified.
     */
    steps?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * **DEPRECATED** Set team access for the pipeline. Can be specified multiple times for each team.
     *
     * @deprecated This block is deprecated. Please use `buildkite_pipeline_team` instead.
     */
    teams?: pulumi.Input<pulumi.Input<inputs.Pipeline.PipelineTeam>[]>;
}
