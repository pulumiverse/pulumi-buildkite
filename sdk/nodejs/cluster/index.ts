// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ClusterAgentTokenArgs, ClusterAgentTokenState } from "./clusterAgentToken";
export type ClusterAgentToken = import("./clusterAgentToken").ClusterAgentToken;
export const ClusterAgentToken: typeof import("./clusterAgentToken").ClusterAgentToken = null as any;
utilities.lazyLoad(exports, ["ClusterAgentToken"], () => require("./clusterAgentToken"));

export { ClusterDefaultQueueArgs, ClusterDefaultQueueState } from "./clusterDefaultQueue";
export type ClusterDefaultQueue = import("./clusterDefaultQueue").ClusterDefaultQueue;
export const ClusterDefaultQueue: typeof import("./clusterDefaultQueue").ClusterDefaultQueue = null as any;
utilities.lazyLoad(exports, ["ClusterDefaultQueue"], () => require("./clusterDefaultQueue"));

export { ClusterQueueArgs, ClusterQueueState } from "./clusterQueue";
export type ClusterQueue = import("./clusterQueue").ClusterQueue;
export const ClusterQueue: typeof import("./clusterQueue").ClusterQueue = null as any;
utilities.lazyLoad(exports, ["ClusterQueue"], () => require("./clusterQueue"));

export { GetClusterArgs, GetClusterResult, GetClusterOutputArgs } from "./getCluster";
export const getCluster: typeof import("./getCluster").getCluster = null as any;
export const getClusterOutput: typeof import("./getCluster").getClusterOutput = null as any;
utilities.lazyLoad(exports, ["getCluster","getClusterOutput"], () => require("./getCluster"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "buildkite:Cluster/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "buildkite:Cluster/clusterAgentToken:ClusterAgentToken":
                return new ClusterAgentToken(name, <any>undefined, { urn })
            case "buildkite:Cluster/clusterDefaultQueue:ClusterDefaultQueue":
                return new ClusterDefaultQueue(name, <any>undefined, { urn })
            case "buildkite:Cluster/clusterQueue:ClusterQueue":
                return new ClusterQueue(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("buildkite", "Cluster/cluster", _module)
pulumi.runtime.registerResourceModule("buildkite", "Cluster/clusterAgentToken", _module)
pulumi.runtime.registerResourceModule("buildkite", "Cluster/clusterDefaultQueue", _module)
pulumi.runtime.registerResourceModule("buildkite", "Cluster/clusterQueue", _module)
