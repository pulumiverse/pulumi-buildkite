// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to retrieve a cluster by name. You can find out more about clusters in the Buildkite [documentation](https://buildkite.com/docs/clusters/overview).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as buildkite from "@pulumi/buildkite";
 * import * as buildkite from "@pulumiverse/buildkite";
 *
 * const default = buildkite.Cluster.getCluster({
 *     name: "default",
 * });
 * // Assign a pipeline to that cluster
 * const terraform_provider_buildkite = new buildkite.pipeline.Pipeline("terraform-provider-buildkite", {
 *     repository: "git@github.com:buildkite/terraform-provider-buildkite.git",
 *     clusterId: _default.then(_default => _default.id),
 * });
 * ```
 */
export function getCluster(args: GetClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("buildkite:Cluster/getCluster:getCluster", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterArgs {
    /**
     * The name of the cluster to retrieve.
     */
    name: string;
}

/**
 * A collection of values returned by getCluster.
 */
export interface GetClusterResult {
    /**
     * The color of the cluster.
     */
    readonly color: string;
    /**
     * The description of the cluster.
     */
    readonly description: string;
    /**
     * The emoji of the cluster.
     */
    readonly emoji: string;
    /**
     * The GraphQL ID of the cluster.
     */
    readonly id: string;
    /**
     * The name of the cluster to retrieve.
     */
    readonly name: string;
    /**
     * The UUID of the cluster
     */
    readonly uuid: string;
}
/**
 * Use this data source to retrieve a cluster by name. You can find out more about clusters in the Buildkite [documentation](https://buildkite.com/docs/clusters/overview).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as buildkite from "@pulumi/buildkite";
 * import * as buildkite from "@pulumiverse/buildkite";
 *
 * const default = buildkite.Cluster.getCluster({
 *     name: "default",
 * });
 * // Assign a pipeline to that cluster
 * const terraform_provider_buildkite = new buildkite.pipeline.Pipeline("terraform-provider-buildkite", {
 *     repository: "git@github.com:buildkite/terraform-provider-buildkite.git",
 *     clusterId: _default.then(_default => _default.id),
 * });
 * ```
 */
export function getClusterOutput(args: GetClusterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterResult> {
    return pulumi.output(args).apply((a: any) => getCluster(a, opts))
}

/**
 * A collection of arguments for invoking getCluster.
 */
export interface GetClusterOutputArgs {
    /**
     * The name of the cluster to retrieve.
     */
    name: pulumi.Input<string>;
}
