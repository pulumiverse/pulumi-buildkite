// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource allows you to create and manage banners for specific organizations, displayed to all members at the top of each page in Buildkite's UI.
 *
 * More information on organization/system banners can be found in the [documentation](https://buildkite.com/docs/team-management/system-banners).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as buildkite from "@pulumiverse/buildkite";
 *
 * const banner = new buildkite.organization.Banner("banner", {message: ":warning: Please be aware of the maintenance window this weekend!"});
 * ```
 *
 * ## Import
 *
 * import an organization banner resource using the banner's GraphQL ID
 *
 * # 
 *
 *  you can use this query to find the banner's ID:
 *
 *  query getOrganizationBannerId {
 *
 *  organization(slug: "ORGANIZATION_SLUG") {
 *
 *  banners(first: 1) {
 *
 *  edges {
 *
 *  node {
 *
 *  id
 *
 *  }
 *
 *  }
 *
 *  }
 *
 *  }
 *
 *  }
 *
 * ```sh
 * $ pulumi import buildkite:Organization/banner:Banner banner T3JnYW5pemF0aW9uQmFubmVyLS0tNjZlMmE5YzktM2IzMy00OGE5LTk1NjItMzY2YzMwNzYzN2Uz
 * ```
 */
export class Banner extends pulumi.CustomResource {
    /**
     * Get an existing Banner resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BannerState, opts?: pulumi.CustomResourceOptions): Banner {
        return new Banner(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'buildkite:Organization/banner:Banner';

    /**
     * Returns true if the given object is an instance of Banner.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Banner {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Banner.__pulumiType;
    }

    /**
     * The organization banner's message.
     */
    public readonly message!: pulumi.Output<string>;
    /**
     * The UUID of the organization banner.
     */
    public /*out*/ readonly uuid!: pulumi.Output<string>;

    /**
     * Create a Banner resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BannerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BannerArgs | BannerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BannerState | undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as BannerArgs | undefined;
            if ((!args || args.message === undefined) && !opts.urn) {
                throw new Error("Missing required property 'message'");
            }
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Banner.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Banner resources.
 */
export interface BannerState {
    /**
     * The organization banner's message.
     */
    message?: pulumi.Input<string>;
    /**
     * The UUID of the organization banner.
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Banner resource.
 */
export interface BannerArgs {
    /**
     * The organization banner's message.
     */
    message: pulumi.Input<string>;
}
