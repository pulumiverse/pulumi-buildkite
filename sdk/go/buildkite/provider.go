// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package buildkite

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/internal"
)

// The provider type for the buildkite package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// API token with GraphQL access and `write_pipelines`, `read_pipelines` and `write_suites` REST API scopes. You can
	// generate a token from [your settings
	// page](https://buildkite.com/user/api-access-tokens/new?description=terraform&scopes[]=write_pipelines&scopes[]=write_suites&scopes[]=read_pipelines&scopes[]=graphql).
	// If not provided, the value is taken from the `BUILDKITE_API_TOKEN` environment variable.
	ApiToken pulumi.StringPtrOutput `pulumi:"apiToken"`
	// Base URL for the GraphQL API to use. If not provided, the value is taken from the `BUILDKITE_GRAPHQL_URL` environment
	// variable.
	GraphqlUrl pulumi.StringPtrOutput `pulumi:"graphqlUrl"`
	// The Buildkite organization slug. This can be found on the [settings](https://buildkite.com/organizations/~/settings)
	// page. If not provided, the value is taken from the `BUILDKITE_ORGANIZATION_SLUG` environment variable.
	Organization pulumi.StringPtrOutput `pulumi:"organization"`
	// Base URL for the REST API to use. If not provided, the value is taken from the `BUILDKITE_REST_URL` environment
	// variable.
	RestUrl pulumi.StringPtrOutput `pulumi:"restUrl"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.ApiToken != nil {
		args.ApiToken = pulumi.ToSecret(args.ApiToken).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiToken",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:buildkite", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// API token with GraphQL access and `write_pipelines`, `read_pipelines` and `write_suites` REST API scopes. You can
	// generate a token from [your settings
	// page](https://buildkite.com/user/api-access-tokens/new?description=terraform&scopes[]=write_pipelines&scopes[]=write_suites&scopes[]=read_pipelines&scopes[]=graphql).
	// If not provided, the value is taken from the `BUILDKITE_API_TOKEN` environment variable.
	ApiToken *string `pulumi:"apiToken"`
	// Enable this to archive pipelines when destroying the resource. This is opposed to completely deleting pipelines.
	ArchivePipelineOnDelete *bool `pulumi:"archivePipelineOnDelete"`
	// Base URL for the GraphQL API to use. If not provided, the value is taken from the `BUILDKITE_GRAPHQL_URL` environment
	// variable.
	GraphqlUrl *string `pulumi:"graphqlUrl"`
	// The Buildkite organization slug. This can be found on the [settings](https://buildkite.com/organizations/~/settings)
	// page. If not provided, the value is taken from the `BUILDKITE_ORGANIZATION_SLUG` environment variable.
	Organization *string `pulumi:"organization"`
	// Base URL for the REST API to use. If not provided, the value is taken from the `BUILDKITE_REST_URL` environment
	// variable.
	RestUrl  *string           `pulumi:"restUrl"`
	Timeouts *ProviderTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// API token with GraphQL access and `write_pipelines`, `read_pipelines` and `write_suites` REST API scopes. You can
	// generate a token from [your settings
	// page](https://buildkite.com/user/api-access-tokens/new?description=terraform&scopes[]=write_pipelines&scopes[]=write_suites&scopes[]=read_pipelines&scopes[]=graphql).
	// If not provided, the value is taken from the `BUILDKITE_API_TOKEN` environment variable.
	ApiToken pulumi.StringPtrInput
	// Enable this to archive pipelines when destroying the resource. This is opposed to completely deleting pipelines.
	ArchivePipelineOnDelete pulumi.BoolPtrInput
	// Base URL for the GraphQL API to use. If not provided, the value is taken from the `BUILDKITE_GRAPHQL_URL` environment
	// variable.
	GraphqlUrl pulumi.StringPtrInput
	// The Buildkite organization slug. This can be found on the [settings](https://buildkite.com/organizations/~/settings)
	// page. If not provided, the value is taken from the `BUILDKITE_ORGANIZATION_SLUG` environment variable.
	Organization pulumi.StringPtrInput
	// Base URL for the REST API to use. If not provided, the value is taken from the `BUILDKITE_REST_URL` environment
	// variable.
	RestUrl  pulumi.StringPtrInput
	Timeouts ProviderTimeoutsPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// API token with GraphQL access and `write_pipelines`, `read_pipelines` and `write_suites` REST API scopes. You can
// generate a token from [your settings
// page](https://buildkite.com/user/api-access-tokens/new?description=terraform&scopes[]=write_pipelines&scopes[]=write_suites&scopes[]=read_pipelines&scopes[]=graphql).
// If not provided, the value is taken from the `BUILDKITE_API_TOKEN` environment variable.
func (o ProviderOutput) ApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ApiToken }).(pulumi.StringPtrOutput)
}

// Base URL for the GraphQL API to use. If not provided, the value is taken from the `BUILDKITE_GRAPHQL_URL` environment
// variable.
func (o ProviderOutput) GraphqlUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.GraphqlUrl }).(pulumi.StringPtrOutput)
}

// The Buildkite organization slug. This can be found on the [settings](https://buildkite.com/organizations/~/settings)
// page. If not provided, the value is taken from the `BUILDKITE_ORGANIZATION_SLUG` environment variable.
func (o ProviderOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Organization }).(pulumi.StringPtrOutput)
}

// Base URL for the REST API to use. If not provided, the value is taken from the `BUILDKITE_REST_URL` environment
// variable.
func (o ProviderOutput) RestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.RestUrl }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
