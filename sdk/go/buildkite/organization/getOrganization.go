// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/internal"
)

// ## # Data Source: organization
//
// Use this data source to look up the organization settings. It currently supports
// allowed_api_ip_addresses.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Organization"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := Organization.GetOrganization(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewSecurityGroup(ctx, "fromBuildkite", &ec2.SecurityGroupArgs{
//				Ingress: ec2.SecurityGroupIngressArray{
//					&ec2.SecurityGroupIngressArgs{
//						FromPort:   pulumi.Int("*"),
//						ToPort:     pulumi.Int(443),
//						Protocol:   pulumi.String("tcp"),
//						CidrBlocks: pulumi.Any(data.Buildkite_organization.Allowed_api_ip_addresses),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupOrganization(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*LookupOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupOrganizationResult
	err := ctx.Invoke("buildkite:Organization/getOrganization:getOrganization", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getOrganization.
type LookupOrganizationResult struct {
	// list of IP addresses in CIDR format that are allowed to access the Buildkite API.
	AllowedApiIpAddresses []string `pulumi:"allowedApiIpAddresses"`
	Id                    string   `pulumi:"id"`
	Uuid                  string   `pulumi:"uuid"`
}
