{"name":"buildkite","displayName":"Buildkite","version":"2.4.0-alpha.1693126077+12f2b137.dirty","description":"A Pulumi package for creating and managing Buildkite resources.","keywords":["pulumi","buildkite"],"homepage":"https://github.com/pulumiverse/pulumi-buildkite","license":"Apache-2.0","attribution":"This Pulumi package is based on the [`buildkite` Terraform Provider](https://github.com/buildkite/terraform-provider-buildkite).","repository":"https://github.com/pulumiverse/pulumi-buildkite","logoUrl":"https://raw.githubusercontent.com/pulumiverse/pulumi-buildkite/main/assets/buildkite-logo.png","pluginDownloadURL":"github://api.github.com/pulumiverse/pulumi-buildkite","publisher":"Pulumiverse","meta":{"moduleFormat":"(.*)(?:/[^/]*)"},"language":{"csharp":{"compatibility":"tfbridge20","namespaces":{"buildkite":"Buildkite"},"packageReferences":{"Pulumi":"3.*"},"rootNamespace":"Pulumiverse"},"go":{"generateExtraInputTypes":true,"generateResourceContainerTypes":true,"importBasePath":"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite"},"nodejs":{"compatibility":"tfbridge20","dependencies":{"@pulumi/pulumi":"^3.0.0"},"devDependencies":{"@types/mime":"^2.0.0","@types/node":"^10.0.0"},"disableUnionOutputTypes":true,"packageDescription":"A Pulumi package for creating and managing Buildkite resources.","packageName":"@pulumiverse/buildkite","pluginName":"","pluginVersion":"","readme":"\u003e This provider is a derived work of the [Terraform Provider](https://github.com/buildkite/terraform-provider-buildkite)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-buildkite` repo](https://github.com/pulumiverse/pulumi-buildkite/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-buildkite` repo](https://github.com/buildkite/terraform-provider-buildkite/issues).","typescriptVersion":""},"python":{"compatibility":"tfbridge20","packageName":"pulumiverse_buildkite","readme":"\u003e This provider is a derived work of the [Terraform Provider](https://github.com/buildkite/terraform-provider-buildkite)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-buildkite` repo](https://github.com/pulumiverse/pulumi-buildkite/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-buildkite` repo](https://github.com/buildkite/terraform-provider-buildkite/issues).","requires":{"pulumi":"\u003e=3.0.0,\u003c4.0.0"}}},"config":{"variables":{"apiToken":{"type":"string","description":"API token with GraphQL access and `write_pipelines, read_pipelines` and `write_suites` REST API scopes\n","secret":true},"archivePipelineOnDelete":{"type":"boolean","description":"Archive pipelines when destroying instead of completely deleting.\n"},"graphqlUrl":{"type":"string","description":"Base URL for the GraphQL API to use\n"},"organization":{"type":"string","description":"The Buildkite organization slug\n"},"restUrl":{"type":"string","description":"Base URL for the REST API to use\n"}}},"types":{"buildkite:Pipeline/PipelineProviderSettings:PipelineProviderSettings":{"properties":{"buildBranches":{"type":"boolean","description":"Whether to create builds when branches are pushed.\n"},"buildPullRequestForks":{"type":"boolean","description":"Whether to create builds for pull requests from third-party forks.\n"},"buildPullRequestLabelsChanged":{"type":"boolean","description":"Whether to create builds for pull requests when labels are added or removed.\n"},"buildPullRequestReadyForReview":{"type":"boolean"},"buildPullRequests":{"type":"boolean","description":"Whether to create builds for commits that are part of a Pull Request.\n"},"buildTags":{"type":"boolean","description":"Whether to create builds when tags are pushed.\n\nProperties available for Bitbucket Cloud, GitHub, and GitHub Enterprise:\n"},"cancelDeletedBranchBuilds":{"type":"boolean","description":"A boolean to enable automatically cancelling any running builds for a branch if the branch is deleted.\n\nAdditional properties available for GitHub:\n"},"filterCondition":{"type":"string","description":"The condition to evaluate when deciding if a build should run. More details available in [the documentation](https://buildkite.com/docs/pipelines/conditionals#conditionals-in-pipelines)\n"},"filterEnabled":{"type":"boolean","description":"[true/false] Whether to filter builds to only run when the condition in `filter_condition` is true\n"},"prefixPullRequestForkBranchNames":{"type":"boolean","description":"Prefix branch names for third-party fork builds to ensure they don't trigger branch conditions. For example, the `master` branch from `some-user` will become `some-user:master`.\n"},"publishBlockedAsPending":{"type":"boolean","description":"The status to use for blocked builds. Pending can be used with [required status checks](https://help.github.com/en/articles/enabling-required-status-checks) to prevent merging pull requests with blocked builds.\n"},"publishCommitStatus":{"type":"boolean","description":"Whether to update the status of commits in Bitbucket or GitHub.\n"},"publishCommitStatusPerStep":{"type":"boolean","description":"Whether to create a separate status for each job in a build, allowing you to see the status of each job directly in Bitbucket or GitHub.\n"},"pullRequestBranchFilterConfiguration":{"type":"string","description":"The branch filtering pattern. Only pull requests on branches matching this pattern will cause builds to be created.\n"},"pullRequestBranchFilterEnabled":{"type":"boolean","description":"Whether to limit the creation of builds to specific branches or patterns.\n"},"separatePullRequestStatuses":{"type":"boolean","description":"Whether to create a separate status for pull request builds, allowing you to require a passing pull request build in your [required status checks](https://help.github.com/en/articles/enabling-required-status-checks) in GitHub.\n"},"skipBuildsForExistingCommits":{"type":"boolean","description":"Whether to skip creating a new build if an existing build for the commit and branch already exists.\n"},"skipPullRequestBuildsForExistingCommits":{"type":"boolean","description":"Whether to skip creating a new build for a pull request if an existing build for the commit and branch already exists.\n"},"triggerMode":{"type":"string","description":"What type of event to trigger builds on. Must be one of:\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["buildBranches","buildPullRequestForks","buildPullRequestLabelsChanged","buildPullRequestReadyForReview","buildPullRequests","buildTags","cancelDeletedBranchBuilds","filterCondition","filterEnabled","prefixPullRequestForkBranchNames","publishBlockedAsPending","publishCommitStatus","publishCommitStatusPerStep","pullRequestBranchFilterConfiguration","pullRequestBranchFilterEnabled","separatePullRequestStatuses","skipBuildsForExistingCommits","skipPullRequestBuildsForExistingCommits","triggerMode"]}}},"buildkite:Pipeline/PipelineTeam:PipelineTeam":{"properties":{"accessLevel":{"type":"string"},"pipelineTeamId":{"type":"string"},"slug":{"type":"string","description":"The slug of the created pipeline.\n"},"teamId":{"type":"string"}},"type":"object","required":["accessLevel","slug"],"language":{"nodejs":{"requiredOutputs":["accessLevel","pipelineTeamId","slug","teamId"]}}}},"provider":{"description":"The provider type for the buildkite package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n","properties":{"apiToken":{"type":"string","description":"API token with GraphQL access and `write_pipelines, read_pipelines` and `write_suites` REST API scopes\n","secret":true},"archivePipelineOnDelete":{"type":"boolean","description":"Archive pipelines when destroying instead of completely deleting.\n"},"graphqlUrl":{"type":"string","description":"Base URL for the GraphQL API to use\n"},"organization":{"type":"string","description":"The Buildkite organization slug\n"},"restUrl":{"type":"string","description":"Base URL for the REST API to use\n"}},"inputProperties":{"apiToken":{"type":"string","description":"API token with GraphQL access and `write_pipelines, read_pipelines` and `write_suites` REST API scopes\n","secret":true},"archivePipelineOnDelete":{"type":"boolean","description":"Archive pipelines when destroying instead of completely deleting.\n"},"graphqlUrl":{"type":"string","description":"Base URL for the GraphQL API to use\n"},"organization":{"type":"string","description":"The Buildkite organization slug\n"},"restUrl":{"type":"string","description":"Base URL for the REST API to use\n"}}},"resources":{"buildkite:Agent/agentToken:AgentToken":{"description":"## # Resource: agent_token\n\nThis resource allows you to create and manage agent tokens.\n\nBuildkite Documentation: https://buildkite.com/docs/agent/v3/tokens\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst fleet = new buildkite.agent.AgentToken(\"fleet\", {description: \"token used by build fleet\"});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\nfleet = buildkite.agent.AgentToken(\"fleet\", description=\"token used by build fleet\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var fleet = new Buildkite.Agent.AgentToken(\"fleet\", new()\n    {\n        Description = \"token used by build fleet\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Agent\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Agent.NewAgentToken(ctx, \"fleet\", \u0026Agent.AgentTokenArgs{\n\t\t\tDescription: pulumi.String(\"token used by build fleet\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Agent.AgentToken;\nimport com.pulumi.buildkite.Agent.AgentTokenArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var fleet = new AgentToken(\"fleet\", AgentTokenArgs.builder()        \n            .description(\"token used by build fleet\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  fleet:\n    type: buildkite:Agent:AgentToken\n    properties:\n      description: token used by build fleet\n```\n{{% /example %}}\n{{% /examples %}}","properties":{"description":{"type":"string","description":"This is the description of the agent token.\n\n\u003e Changing `description` will cause the resource to be destroyed and re-created.\n"},"token":{"type":"string","description":"The value of the created agent token.\n","secret":true},"uuid":{"type":"string","description":"The UUID of the token.\n"}},"required":["token","uuid"],"inputProperties":{"description":{"type":"string","description":"This is the description of the agent token.\n\n\u003e Changing `description` will cause the resource to be destroyed and re-created.\n"}},"stateInputs":{"description":"Input properties used for looking up and filtering AgentToken resources.\n","properties":{"description":{"type":"string","description":"This is the description of the agent token.\n\n\u003e Changing `description` will cause the resource to be destroyed and re-created.\n"},"token":{"type":"string","description":"The value of the created agent token.\n","secret":true},"uuid":{"type":"string","description":"The UUID of the token.\n"}},"type":"object"}},"buildkite:Cluster/cluster:Cluster":{"description":"## # Resource: cluster\n\nThis resource allows you to create, manage and import Clusters.\n\nBuildkite documentation: https://buildkite.com/docs/clusters/overview\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst linux = new buildkite.cluster.Cluster(\"linux\", {});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\nlinux = buildkite.cluster.Cluster(\"linux\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var linux = new Buildkite.Cluster.Cluster(\"linux\");\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Cluster\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Cluster.NewCluster(ctx, \"linux\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Cluster.Cluster;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var linux = new Cluster(\"linux\");\n\n    }\n}\n```\n```yaml\nresources:\n  linux:\n    type: buildkite:Cluster:Cluster\n```\n{{% /example %}}\n{{% /examples %}}","properties":{"color":{"type":"string","description":"A color to associate with the Cluster. Perhaps a team related color, or one related to an environment. This is set using hex value, such as `#BADA55`.\n"},"description":{"type":"string","description":"This is a description for the cluster, this may describe the usage for it, the region, or something else which would help identify the Cluster's purpose.\n"},"emoji":{"type":"string","description":"An emoji to use with the Cluster, this can either be set using `:buildkite:` notation, or with the emoji itself, such as 😎.\n"},"name":{"type":"string","description":"This is the name of the cluster.\n"},"uuid":{"type":"string","description":"The UUID created with the Cluster.\n"}},"required":["name","uuid"],"inputProperties":{"color":{"type":"string","description":"A color to associate with the Cluster. Perhaps a team related color, or one related to an environment. This is set using hex value, such as `#BADA55`.\n"},"description":{"type":"string","description":"This is a description for the cluster, this may describe the usage for it, the region, or something else which would help identify the Cluster's purpose.\n"},"emoji":{"type":"string","description":"An emoji to use with the Cluster, this can either be set using `:buildkite:` notation, or with the emoji itself, such as 😎.\n"},"name":{"type":"string","description":"This is the name of the cluster.\n"}},"stateInputs":{"description":"Input properties used for looking up and filtering Cluster resources.\n","properties":{"color":{"type":"string","description":"A color to associate with the Cluster. Perhaps a team related color, or one related to an environment. This is set using hex value, such as `#BADA55`.\n"},"description":{"type":"string","description":"This is a description for the cluster, this may describe the usage for it, the region, or something else which would help identify the Cluster's purpose.\n"},"emoji":{"type":"string","description":"An emoji to use with the Cluster, this can either be set using `:buildkite:` notation, or with the emoji itself, such as 😎.\n"},"name":{"type":"string","description":"This is the name of the cluster.\n"},"uuid":{"type":"string","description":"The UUID created with the Cluster.\n"}},"type":"object"}},"buildkite:Cluster/clusterAgentToken:ClusterAgentToken":{"description":"## # Resource: cluster_agent_token\n\nThis resource allows you to create and manage cluster agent tokens.\n\nBuildkite Documentation: https://buildkite.com/docs/clusters/manage-clusters#set-up-clusters-connect-agents-to-a-cluster\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst cluster_token_1 = new buildkite.cluster.ClusterAgentToken(\"cluster-token-1\", {\n    clusterId: \"Q2x1c3Rlci0tLTkyMmVjOTA4LWRmNWItNDhhYS1hMThjLTczMzE0YjQ1ZGYyMA==\",\n    description: \"agent token for cluster-1\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\ncluster_token_1 = buildkite.cluster.ClusterAgentToken(\"cluster-token-1\",\n    cluster_id=\"Q2x1c3Rlci0tLTkyMmVjOTA4LWRmNWItNDhhYS1hMThjLTczMzE0YjQ1ZGYyMA==\",\n    description=\"agent token for cluster-1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cluster_token_1 = new Buildkite.Cluster.ClusterAgentToken(\"cluster-token-1\", new()\n    {\n        ClusterId = \"Q2x1c3Rlci0tLTkyMmVjOTA4LWRmNWItNDhhYS1hMThjLTczMzE0YjQ1ZGYyMA==\",\n        Description = \"agent token for cluster-1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Cluster\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Cluster.NewClusterAgentToken(ctx, \"cluster-token-1\", \u0026Cluster.ClusterAgentTokenArgs{\n\t\t\tClusterId:   pulumi.String(\"Q2x1c3Rlci0tLTkyMmVjOTA4LWRmNWItNDhhYS1hMThjLTczMzE0YjQ1ZGYyMA==\"),\n\t\t\tDescription: pulumi.String(\"agent token for cluster-1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Cluster.ClusterAgentToken;\nimport com.pulumi.buildkite.Cluster.ClusterAgentTokenArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cluster_token_1 = new ClusterAgentToken(\"cluster-token-1\", ClusterAgentTokenArgs.builder()        \n            .clusterId(\"Q2x1c3Rlci0tLTkyMmVjOTA4LWRmNWItNDhhYS1hMThjLTczMzE0YjQ1ZGYyMA==\")\n            .description(\"agent token for cluster-1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cluster-token-1:\n    type: buildkite:Cluster:ClusterAgentToken\n    properties:\n      clusterId: Q2x1c3Rlci0tLTkyMmVjOTA4LWRmNWItNDhhYS1hMThjLTczMzE0YjQ1ZGYyMA==\n      description: agent token for cluster-1\n```\n{{% /example %}}\n{{% /examples %}}","properties":{"clusterId":{"type":"string","description":"The ID of the cluster that this cluster queue belongs to.\n"},"clusterUuid":{"type":"string","description":"The UUID of the cluster that this cluster queue belongs to.\n"},"description":{"type":"string","description":"A description about what this cluster agent token is used for.\n"},"token":{"type":"string","secret":true},"uuid":{"type":"string","description":"The UUID of the created cluster queue.\n"}},"required":["clusterId","clusterUuid","description","token","uuid"],"inputProperties":{"clusterId":{"type":"string","description":"The ID of the cluster that this cluster queue belongs to.\n"},"description":{"type":"string","description":"A description about what this cluster agent token is used for.\n"}},"requiredInputs":["clusterId","description"],"stateInputs":{"description":"Input properties used for looking up and filtering ClusterAgentToken resources.\n","properties":{"clusterId":{"type":"string","description":"The ID of the cluster that this cluster queue belongs to.\n"},"clusterUuid":{"type":"string","description":"The UUID of the cluster that this cluster queue belongs to.\n"},"description":{"type":"string","description":"A description about what this cluster agent token is used for.\n"},"token":{"type":"string","secret":true},"uuid":{"type":"string","description":"The UUID of the created cluster queue.\n"}},"type":"object"}},"buildkite:Cluster/clusterQueue:ClusterQueue":{"description":"## # Resource: cluster_queue\n\nThis resource allows you to create and manage cluster queues.\n\nBuildkite Documentation: https://buildkite.com/docs/clusters/manage-clusters#set-up-clusters-create-a-queue\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst queue1 = new buildkite.cluster.ClusterQueue(\"queue1\", {\n    clusterId: \"Q2x1c3Rlci0tLTMzMDc0ZDhiLTM4MjctNDRkNC05YTQ3LTkwN2E2NWZjODViNg==\",\n    description: \"Prod deployment cluster queue\",\n    key: \"prod-deploy\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\nqueue1 = buildkite.cluster.ClusterQueue(\"queue1\",\n    cluster_id=\"Q2x1c3Rlci0tLTMzMDc0ZDhiLTM4MjctNDRkNC05YTQ3LTkwN2E2NWZjODViNg==\",\n    description=\"Prod deployment cluster queue\",\n    key=\"prod-deploy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var queue1 = new Buildkite.Cluster.ClusterQueue(\"queue1\", new()\n    {\n        ClusterId = \"Q2x1c3Rlci0tLTMzMDc0ZDhiLTM4MjctNDRkNC05YTQ3LTkwN2E2NWZjODViNg==\",\n        Description = \"Prod deployment cluster queue\",\n        Key = \"prod-deploy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Cluster\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Cluster.NewClusterQueue(ctx, \"queue1\", \u0026Cluster.ClusterQueueArgs{\n\t\t\tClusterId:   pulumi.String(\"Q2x1c3Rlci0tLTMzMDc0ZDhiLTM4MjctNDRkNC05YTQ3LTkwN2E2NWZjODViNg==\"),\n\t\t\tDescription: pulumi.String(\"Prod deployment cluster queue\"),\n\t\t\tKey:         pulumi.String(\"prod-deploy\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Cluster.ClusterQueue;\nimport com.pulumi.buildkite.Cluster.ClusterQueueArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var queue1 = new ClusterQueue(\"queue1\", ClusterQueueArgs.builder()        \n            .clusterId(\"Q2x1c3Rlci0tLTMzMDc0ZDhiLTM4MjctNDRkNC05YTQ3LTkwN2E2NWZjODViNg==\")\n            .description(\"Prod deployment cluster queue\")\n            .key(\"prod-deploy\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  queue1:\n    type: buildkite:Cluster:ClusterQueue\n    properties:\n      clusterId: Q2x1c3Rlci0tLTMzMDc0ZDhiLTM4MjctNDRkNC05YTQ3LTkwN2E2NWZjODViNg==\n      description: Prod deployment cluster queue\n      key: prod-deploy\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nCluster queues can be imported using its `GraphQL ID`, along with its respective cluster `UUID`, separated by a comma. e.g.\n\n```sh\n $ pulumi import buildkite:Cluster/clusterQueue:ClusterQueue test Q2x1c3RlclF1ZXVlLS0tYjJiOGRhNTEtOWY5My00Y2MyLTkyMjktMGRiNzg3ZDQzOTAz,35498aaf-ad05-4fa5-9a07-91bf6cacd2bd\n```\n\n To find the cluster's `UUID` to utilize, you can use the below GraphQL query below. Alternatively, you can use this [pre-saved query](https://buildkite.com/user/graphql/console/3adf0389-02bd-45ef-adcd-4e8e5ae57f25), where you will need fo fill in the organization slug (ORGANIZATION_SLUG) for obtaining the relevant cluster name/`UUID` that the cluster queue is in. graphql query getClusters {\n\n organization(slug\"ORGANIZATION_SLUG\") {\n\n\n\n clusters(first50) {\n\n\n\n\n\n edges{\n\n\n\n\n\n\n\n node{\n\n\n\n\n\n\n\n\n\n name\n\n\n\n\n\n\n\n\n\n uuid\n\n\n\n\n\n\n\n }\n\n\n\n\n\n }\n\n\n\n }\n\n } } After the cluster `UUID` has been found, you can use the below GraphQL query to find the cluster queue's `GraphQL ID`. Alternatively, this [pre-saved query](https://buildkite.com/user/graphql/console/1d913905-900e-40e7-8f46-651543487b5a) can be used, specifying the organization slug (ORGANIZATION_SLUG) and the cluster `UUID` from above (CLUSTER_UUID). graphql query getClusterQueues {\n\n organization(slug\"ORGANIZATION_SLUG\") {\n\n\n\n cluster(id\"CLUSTER_UUID\") {\n\n\n\n\n\n queues(first50) {\n\n\n\n\n\n\n\n edges {\n\n\n\n\n\n\n\n\n\n node {\n\n\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n\n\n key\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n }\n\n\n\n\n\n }\n\n\n\n }\n\n } } ","properties":{"clusterId":{"type":"string","description":"The ID of the cluster that this cluster queue belongs to.\n"},"clusterUuid":{"type":"string","description":"The UUID of the cluster that this cluster queue belongs to.\n"},"description":{"type":"string","description":"The description of the cluster queue.\n"},"key":{"type":"string","description":"The key of the cluster queue.\n"},"uuid":{"type":"string","description":"The UUID of the created cluster queue.\n"}},"required":["clusterId","clusterUuid","key","uuid"],"inputProperties":{"clusterId":{"type":"string","description":"The ID of the cluster that this cluster queue belongs to.\n"},"description":{"type":"string","description":"The description of the cluster queue.\n"},"key":{"type":"string","description":"The key of the cluster queue.\n"}},"requiredInputs":["clusterId","key"],"stateInputs":{"description":"Input properties used for looking up and filtering ClusterQueue resources.\n","properties":{"clusterId":{"type":"string","description":"The ID of the cluster that this cluster queue belongs to.\n"},"clusterUuid":{"type":"string","description":"The UUID of the cluster that this cluster queue belongs to.\n"},"description":{"type":"string","description":"The description of the cluster queue.\n"},"key":{"type":"string","description":"The key of the cluster queue.\n"},"uuid":{"type":"string","description":"The UUID of the created cluster queue.\n"}},"type":"object"}},"buildkite:Organization/organization:Organization":{"description":"## # Resource: organization\n\nThis resource allows you to manage the settings for an organization.\n\nYou must be an organization administrator to manage organization settings.\n\nNote: The \"Allowed API IP Addresses\" feature must be enabled on your organization in order to manage the `allowed_api_ip_addresses` attribute.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst testSettings = new buildkite.organization.Organization(\"testSettings\", {allowedApiIpAddresses: [\"1.1.1.1/32\"]});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\ntest_settings = buildkite.organization.Organization(\"testSettings\", allowed_api_ip_addresses=[\"1.1.1.1/32\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testSettings = new Buildkite.Organization.Organization(\"testSettings\", new()\n    {\n        AllowedApiIpAddresses = new[]\n        {\n            \"1.1.1.1/32\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Organization\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Organization.NewOrganization(ctx, \"testSettings\", \u0026Organization.OrganizationArgs{\n\t\t\tAllowedApiIpAddresses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.1.1.1/32\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Organization.Organization;\nimport com.pulumi.buildkite.Organization.OrganizationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testSettings = new Organization(\"testSettings\", OrganizationArgs.builder()        \n            .allowedApiIpAddresses(\"1.1.1.1/32\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testSettings:\n    type: buildkite:Organization:Organization\n    properties:\n      allowedApiIpAddresses:\n        - 1.1.1.1/32\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOrganization settings can be imported by passing the organization slug to the import command, along with the identifier of the resource.\n\n```sh\n $ pulumi import buildkite:Organization/organization:Organization test_settings test_org\n```\n\n Your organization's slug can be found in your organisation's [settings](https://buildkite.com/organizations/~/settings) page. ","properties":{"allowedApiIpAddresses":{"type":"array","items":{"type":"string"},"description":"A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).\n"},"uuid":{"type":"string"}},"required":["uuid"],"inputProperties":{"allowedApiIpAddresses":{"type":"array","items":{"type":"string"},"description":"A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).\n"}},"stateInputs":{"description":"Input properties used for looking up and filtering Organization resources.\n","properties":{"allowedApiIpAddresses":{"type":"array","items":{"type":"string"},"description":"A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).\n"},"uuid":{"type":"string"}},"type":"object"}},"buildkite:Organization/settings:Settings":{"description":"## # Resource: organization_settings\n\n**Note**: This resource has been deprecated. In a future minor release, we will remove this resource in favour of the newer `buildkite.Organization.Organization` resource that aligns with the datasource of the same name. \n\nThis resource allows you to manage the settings for an organization.\n\nYou must be an organization administrator to manage organization settings.\n\nNote: The \"Allowed API IP Addresses\" feature must be enabled on your organization in order to manage the `allowed_api_ip_addresses` attribute.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst testSettings = new buildkite.organization.Settings(\"testSettings\", {allowedApiIpAddresses: [\"1.1.1.1/32\"]});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\ntest_settings = buildkite.organization.Settings(\"testSettings\", allowed_api_ip_addresses=[\"1.1.1.1/32\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testSettings = new Buildkite.Organization.Settings(\"testSettings\", new()\n    {\n        AllowedApiIpAddresses = new[]\n        {\n            \"1.1.1.1/32\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Organization\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Organization.NewSettings(ctx, \"testSettings\", \u0026Organization.SettingsArgs{\n\t\t\tAllowedApiIpAddresses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.1.1.1/32\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Organization.Settings;\nimport com.pulumi.buildkite.Organization.SettingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var testSettings = new Settings(\"testSettings\", SettingsArgs.builder()        \n            .allowedApiIpAddresses(\"1.1.1.1/32\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testSettings:\n    type: buildkite:Organization:Settings\n    properties:\n      allowedApiIpAddresses:\n        - 1.1.1.1/32\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nOrganization settings can be imported by passing the organization slug to the import command, along with the identifier of the resource.\n\n```sh\n $ pulumi import buildkite:Organization/settings:Settings test_settings test_org\n```\n\n Your organization's slug can be found in your organisation's [settings](https://buildkite.com/organizations/~/settings) page. ","properties":{"allowedApiIpAddresses":{"type":"array","items":{"type":"string"},"description":"A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).\n"},"uuid":{"type":"string"}},"required":["uuid"],"inputProperties":{"allowedApiIpAddresses":{"type":"array","items":{"type":"string"},"description":"A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).\n"}},"stateInputs":{"description":"Input properties used for looking up and filtering Settings resources.\n","properties":{"allowedApiIpAddresses":{"type":"array","items":{"type":"string"},"description":"A list of IP addresses in CIDR format that are allowed to access the Buildkite API. If not set, all IP addresses are allowed (the same as setting 0.0.0.0/0).\n"},"uuid":{"type":"string"}},"type":"object"}},"buildkite:Pipeline/pipeline:Pipeline":{"description":"\n\n\n## Import\n\nPipelines can be imported using the `GraphQL ID` (not UUID), e.g.\n\n```sh\n $ pulumi import buildkite:Pipeline/pipeline:Pipeline fleet UGlwZWxpbmUtLS00MzVjYWQ1OC1lODFkLTQ1YWYtODYzNy1iMWNmODA3MDIzOGQ=\n```\n\n To find the ID to use, you can use the GraphQL query below. Alternatively, you could use this [pre-saved query](https://buildkite.com/user/graphql/console/04e6ac1d-222e-49f9-8167-4767ab0f5362). graphql query getPipelineId {\n\n\n\n pipeline(slug\"ORGANIZATION_SLUG/PIPELINE_SLUG\") {\n\n\n\n\n\n\n\n id\n\n\n\n } } ","properties":{"allowRebuilds":{"type":"boolean","description":"A boolean on whether or not to allow rebuilds for the pipeline.\n"},"archiveOnDelete":{"type":"boolean","deprecationMessage":"This attribute has been deprecated and will be removed in v0.27.0. Please use provider configuration `archive_pipeline_on_delete` instead."},"badgeUrl":{"type":"string","description":"The pipeline's last build status so you can display build status badge.\n"},"branchConfiguration":{"type":"string","description":"Limit which branches and tags cause new builds to be created, either via a code push or via the Builds REST API.\n"},"cancelIntermediateBuilds":{"type":"boolean","description":"A boolean to enable automatically cancelling any running builds on the same branch when a new build is created.\n"},"cancelIntermediateBuildsBranchFilter":{"type":"string","description":"Limit which branches build cancelling applies to, for example !master will ensure that the master branch won't have its builds automatically cancelled.\n"},"clusterId":{"type":"string","description":"The GraphQL ID of the cluster you want to use for the pipeline.\n"},"defaultBranch":{"type":"string","description":"The default branch to prefill when new builds are created or triggered, usually main or master but can be anything.\n"},"defaultTimeoutInMinutes":{"type":"integer","description":"The default timeout for commands in this pipeline, in minutes.\n"},"deletionProtection":{"type":"boolean","description":"**DEPRECATED** (Optional) Set to either `true` or `false`. When set to `true`, `destroy` actions on a pipeline will be blocked and fail with a message \"Deletion protection is enabled for pipeline: \u003cpipeline name\u003e\"\n","deprecationMessage":"Deletion protection will be removed in a future release. A similar solution already exists and is supported by Terraform. See https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle."},"description":{"type":"string","description":"A description of the pipeline.\n"},"maximumTimeoutInMinutes":{"type":"integer","description":"The maximum timeout for commands in this pipeline, in minutes.\n"},"name":{"type":"string","description":"The name of the pipeline.\n"},"providerSettings":{"$ref":"#/types/buildkite:Pipeline/PipelineProviderSettings:PipelineProviderSettings","description":"Source control provider settings for the pipeline. See Provider Settings Configuration below for details.\n"},"repository":{"type":"string","description":"The git URL of the repository.\n"},"skipIntermediateBuilds":{"type":"boolean","description":"A boolean to enable automatically skipping any unstarted builds on the same branch when a new build is created.\n"},"skipIntermediateBuildsBranchFilter":{"type":"string","description":"Limit which branches build skipping applies to, for example `!master` will ensure that the master branch won't have its builds automatically skipped.\n"},"slug":{"type":"string","description":"The slug of the created pipeline.\n"},"steps":{"type":"string","description":"The string YAML steps to run the pipeline. Defaults to `buildkite-agent pipeline upload` if not specified.\n"},"tags":{"type":"array","items":{"type":"string"}},"teams":{"type":"array","items":{"$ref":"#/types/buildkite:Pipeline/PipelineTeam:PipelineTeam"},"description":"**DEPRECATED** Set team access for the pipeline. Can be specified multiple times for each team.\n","deprecationMessage":"This block is deprecated. Please use `buildkite_pipeline_team` instead."},"webhookUrl":{"type":"string","description":"The Buildkite webhook URL to configure on the repository to trigger builds on this pipeline.\n"}},"required":["allowRebuilds","archiveOnDelete","badgeUrl","cancelIntermediateBuilds","cancelIntermediateBuildsBranchFilter","defaultBranch","defaultTimeoutInMinutes","deletionProtection","description","maximumTimeoutInMinutes","name","repository","skipIntermediateBuilds","skipIntermediateBuildsBranchFilter","slug","steps","tags","webhookUrl"],"inputProperties":{"allowRebuilds":{"type":"boolean","description":"A boolean on whether or not to allow rebuilds for the pipeline.\n"},"archiveOnDelete":{"type":"boolean","deprecationMessage":"This attribute has been deprecated and will be removed in v0.27.0. Please use provider configuration `archive_pipeline_on_delete` instead."},"branchConfiguration":{"type":"string","description":"Limit which branches and tags cause new builds to be created, either via a code push or via the Builds REST API.\n"},"cancelIntermediateBuilds":{"type":"boolean","description":"A boolean to enable automatically cancelling any running builds on the same branch when a new build is created.\n"},"cancelIntermediateBuildsBranchFilter":{"type":"string","description":"Limit which branches build cancelling applies to, for example !master will ensure that the master branch won't have its builds automatically cancelled.\n"},"clusterId":{"type":"string","description":"The GraphQL ID of the cluster you want to use for the pipeline.\n"},"defaultBranch":{"type":"string","description":"The default branch to prefill when new builds are created or triggered, usually main or master but can be anything.\n"},"defaultTimeoutInMinutes":{"type":"integer","description":"The default timeout for commands in this pipeline, in minutes.\n"},"deletionProtection":{"type":"boolean","description":"**DEPRECATED** (Optional) Set to either `true` or `false`. When set to `true`, `destroy` actions on a pipeline will be blocked and fail with a message \"Deletion protection is enabled for pipeline: \u003cpipeline name\u003e\"\n","deprecationMessage":"Deletion protection will be removed in a future release. A similar solution already exists and is supported by Terraform. See https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle."},"description":{"type":"string","description":"A description of the pipeline.\n"},"maximumTimeoutInMinutes":{"type":"integer","description":"The maximum timeout for commands in this pipeline, in minutes.\n"},"name":{"type":"string","description":"The name of the pipeline.\n"},"providerSettings":{"$ref":"#/types/buildkite:Pipeline/PipelineProviderSettings:PipelineProviderSettings","description":"Source control provider settings for the pipeline. See Provider Settings Configuration below for details.\n"},"repository":{"type":"string","description":"The git URL of the repository.\n"},"skipIntermediateBuilds":{"type":"boolean","description":"A boolean to enable automatically skipping any unstarted builds on the same branch when a new build is created.\n"},"skipIntermediateBuildsBranchFilter":{"type":"string","description":"Limit which branches build skipping applies to, for example `!master` will ensure that the master branch won't have its builds automatically skipped.\n"},"steps":{"type":"string","description":"The string YAML steps to run the pipeline. Defaults to `buildkite-agent pipeline upload` if not specified.\n"},"tags":{"type":"array","items":{"type":"string"}},"teams":{"type":"array","items":{"$ref":"#/types/buildkite:Pipeline/PipelineTeam:PipelineTeam"},"description":"**DEPRECATED** Set team access for the pipeline. Can be specified multiple times for each team.\n","deprecationMessage":"This block is deprecated. Please use `buildkite_pipeline_team` instead."}},"requiredInputs":["repository"],"stateInputs":{"description":"Input properties used for looking up and filtering Pipeline resources.\n","properties":{"allowRebuilds":{"type":"boolean","description":"A boolean on whether or not to allow rebuilds for the pipeline.\n"},"archiveOnDelete":{"type":"boolean","deprecationMessage":"This attribute has been deprecated and will be removed in v0.27.0. Please use provider configuration `archive_pipeline_on_delete` instead."},"badgeUrl":{"type":"string","description":"The pipeline's last build status so you can display build status badge.\n"},"branchConfiguration":{"type":"string","description":"Limit which branches and tags cause new builds to be created, either via a code push or via the Builds REST API.\n"},"cancelIntermediateBuilds":{"type":"boolean","description":"A boolean to enable automatically cancelling any running builds on the same branch when a new build is created.\n"},"cancelIntermediateBuildsBranchFilter":{"type":"string","description":"Limit which branches build cancelling applies to, for example !master will ensure that the master branch won't have its builds automatically cancelled.\n"},"clusterId":{"type":"string","description":"The GraphQL ID of the cluster you want to use for the pipeline.\n"},"defaultBranch":{"type":"string","description":"The default branch to prefill when new builds are created or triggered, usually main or master but can be anything.\n"},"defaultTimeoutInMinutes":{"type":"integer","description":"The default timeout for commands in this pipeline, in minutes.\n"},"deletionProtection":{"type":"boolean","description":"**DEPRECATED** (Optional) Set to either `true` or `false`. When set to `true`, `destroy` actions on a pipeline will be blocked and fail with a message \"Deletion protection is enabled for pipeline: \u003cpipeline name\u003e\"\n","deprecationMessage":"Deletion protection will be removed in a future release. A similar solution already exists and is supported by Terraform. See https://developer.hashicorp.com/terraform/language/meta-arguments/lifecycle."},"description":{"type":"string","description":"A description of the pipeline.\n"},"maximumTimeoutInMinutes":{"type":"integer","description":"The maximum timeout for commands in this pipeline, in minutes.\n"},"name":{"type":"string","description":"The name of the pipeline.\n"},"providerSettings":{"$ref":"#/types/buildkite:Pipeline/PipelineProviderSettings:PipelineProviderSettings","description":"Source control provider settings for the pipeline. See Provider Settings Configuration below for details.\n"},"repository":{"type":"string","description":"The git URL of the repository.\n"},"skipIntermediateBuilds":{"type":"boolean","description":"A boolean to enable automatically skipping any unstarted builds on the same branch when a new build is created.\n"},"skipIntermediateBuildsBranchFilter":{"type":"string","description":"Limit which branches build skipping applies to, for example `!master` will ensure that the master branch won't have its builds automatically skipped.\n"},"slug":{"type":"string","description":"The slug of the created pipeline.\n"},"steps":{"type":"string","description":"The string YAML steps to run the pipeline. Defaults to `buildkite-agent pipeline upload` if not specified.\n"},"tags":{"type":"array","items":{"type":"string"}},"teams":{"type":"array","items":{"$ref":"#/types/buildkite:Pipeline/PipelineTeam:PipelineTeam"},"description":"**DEPRECATED** Set team access for the pipeline. Can be specified multiple times for each team.\n","deprecationMessage":"This block is deprecated. Please use `buildkite_pipeline_team` instead."},"webhookUrl":{"type":"string","description":"The Buildkite webhook URL to configure on the repository to trigger builds on this pipeline.\n"}},"type":"object"}},"buildkite:Pipeline/schedule:Schedule":{"description":"## # Resource: pipeline_schedule\n\nThis resource allows you to create and manage pipeline schedules.\n\nBuildkite Documentation: https://buildkite.com/docs/pipelines/scheduled-builds\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst repo2Nightly = new buildkite.pipeline.Schedule(\"repo2Nightly\", {\n    pipelineId: buildkite_pipeline.repo2.id,\n    label: \"Nightly build\",\n    cronline: \"@midnight\",\n    branch: buildkite_pipeline.repo2.default_branch,\n});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\nrepo2_nightly = buildkite.pipeline.Schedule(\"repo2Nightly\",\n    pipeline_id=buildkite_pipeline[\"repo2\"][\"id\"],\n    label=\"Nightly build\",\n    cronline=\"@midnight\",\n    branch=buildkite_pipeline[\"repo2\"][\"default_branch\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var repo2Nightly = new Buildkite.Pipeline.Schedule(\"repo2Nightly\", new()\n    {\n        PipelineId = buildkite_pipeline.Repo2.Id,\n        Label = \"Nightly build\",\n        Cronline = \"@midnight\",\n        Branch = buildkite_pipeline.Repo2.Default_branch,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Pipeline\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Pipeline.NewSchedule(ctx, \"repo2Nightly\", \u0026Pipeline.ScheduleArgs{\n\t\t\tPipelineId: pulumi.Any(buildkite_pipeline.Repo2.Id),\n\t\t\tLabel:      pulumi.String(\"Nightly build\"),\n\t\t\tCronline:   pulumi.String(\"@midnight\"),\n\t\t\tBranch:     pulumi.Any(buildkite_pipeline.Repo2.Default_branch),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Pipeline.Schedule;\nimport com.pulumi.buildkite.Pipeline.ScheduleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var repo2Nightly = new Schedule(\"repo2Nightly\", ScheduleArgs.builder()        \n            .pipelineId(buildkite_pipeline.repo2().id())\n            .label(\"Nightly build\")\n            .cronline(\"@midnight\")\n            .branch(buildkite_pipeline.repo2().default_branch())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  repo2Nightly:\n    type: buildkite:Pipeline:Schedule\n    properties:\n      pipelineId: ${buildkite_pipeline.repo2.id}\n      label: Nightly build\n      cronline: '@midnight'\n      branch: ${buildkite_pipeline.repo2.default_branch}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPipeline schedules can be imported using their `GraphQL ID`, e.g.\n\n```sh\n $ pulumi import buildkite:Pipeline/schedule:Schedule test UGlwZWxpgm5Tf2hhZHVsZ35tLWRk4DdmN7c4LTA5M2ItNDM9YS0gMWE0LTAwZDUgYTAxYvRf49==\n```\n\n Your pipeline schedules' GraphQL ID can be found with the below GraphQL query below. Alternatively, you could use this [pre-saved query](https://buildkite.com/user/graphql/console/45687b7c-2565-4acb-8a74-750a3647875f), specifying the organisation slug (when known) and the pipeline search term (PIPELINE_SEARCH_TERM). graphql query getPipelineScheduleId {\n\n organization(slug\"ORGANIZATION_SLUG\") { \t\tpipelines(first5, search\"PIPELINE_SEARCH_TERM\") {\n\n\n\n\n\n edges{\n\n\n\n\n\n\n\n node{\n\n\n\n\n\n\n\n\n\n name\n\n\n\n\n\n\n\n\n\n schedules{\n\n\n\n\n\n\n\n\n\n\n\n edges{\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnode{\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n }\n\n\n\n\n\n }\n\n\n\n }\n\n } } ","properties":{"branch":{"type":"string","description":"The branch to use for the build.\n"},"commit":{"type":"string","description":"The commit ref to use for the build.\n"},"cronline":{"type":"string","description":"Schedule interval (see [docs](https://buildkite.com/docs/pipelines/scheduled-builds#schedule-intervals)).\n"},"enabled":{"type":"boolean","description":"Whether the schedule should run.\n"},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"A map of environment variables to use for the build.\n"},"label":{"type":"string","description":"Schedule label.\n"},"message":{"type":"string","description":"The message to use for the build.\n"},"pipelineId":{"type":"string","description":"The ID of the pipeline that this schedule belongs to.\n"},"uuid":{"type":"string","description":"The UUID of the pipeline schedule\n"}},"required":["branch","commit","cronline","enabled","label","pipelineId","uuid"],"inputProperties":{"branch":{"type":"string","description":"The branch to use for the build.\n"},"commit":{"type":"string","description":"The commit ref to use for the build.\n"},"cronline":{"type":"string","description":"Schedule interval (see [docs](https://buildkite.com/docs/pipelines/scheduled-builds#schedule-intervals)).\n"},"enabled":{"type":"boolean","description":"Whether the schedule should run.\n"},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"A map of environment variables to use for the build.\n"},"label":{"type":"string","description":"Schedule label.\n"},"message":{"type":"string","description":"The message to use for the build.\n"},"pipelineId":{"type":"string","description":"The ID of the pipeline that this schedule belongs to.\n"}},"requiredInputs":["branch","cronline","label","pipelineId"],"stateInputs":{"description":"Input properties used for looking up and filtering Schedule resources.\n","properties":{"branch":{"type":"string","description":"The branch to use for the build.\n"},"commit":{"type":"string","description":"The commit ref to use for the build.\n"},"cronline":{"type":"string","description":"Schedule interval (see [docs](https://buildkite.com/docs/pipelines/scheduled-builds#schedule-intervals)).\n"},"enabled":{"type":"boolean","description":"Whether the schedule should run.\n"},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"A map of environment variables to use for the build.\n"},"label":{"type":"string","description":"Schedule label.\n"},"message":{"type":"string","description":"The message to use for the build.\n"},"pipelineId":{"type":"string","description":"The ID of the pipeline that this schedule belongs to.\n"},"uuid":{"type":"string","description":"The UUID of the pipeline schedule\n"}},"type":"object"}},"buildkite:Pipeline/team:Team":{"description":"## # Resource: pipeline_team\n\nThis resource allows you to create and manage team configuration in a pipeline.\n\nBuildkite Documentation: https://buildkite.com/docs/pipelines/permissions#permissions-with-teams-pipeline-level-permissions\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst developers = new buildkite.pipeline.Team(\"developers\", {\n    pipelineId: buildkite_pipeline.repo2,\n    teamId: buildkite_team.test.id,\n    accessLevel: \"MANAGE_BUILD_AND_READ\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\ndevelopers = buildkite.pipeline.Team(\"developers\",\n    pipeline_id=buildkite_pipeline[\"repo2\"],\n    team_id=buildkite_team[\"test\"][\"id\"],\n    access_level=\"MANAGE_BUILD_AND_READ\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var developers = new Buildkite.Pipeline.Team(\"developers\", new()\n    {\n        PipelineId = buildkite_pipeline.Repo2,\n        TeamId = buildkite_team.Test.Id,\n        AccessLevel = \"MANAGE_BUILD_AND_READ\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Pipeline\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Pipeline.NewTeam(ctx, \"developers\", \u0026Pipeline.TeamArgs{\n\t\t\tPipelineId:  pulumi.Any(buildkite_pipeline.Repo2),\n\t\t\tTeamId:      pulumi.Any(buildkite_team.Test.Id),\n\t\t\tAccessLevel: pulumi.String(\"MANAGE_BUILD_AND_READ\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Pipeline.Team;\nimport com.pulumi.buildkite.Pipeline.TeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var developers = new Team(\"developers\", TeamArgs.builder()        \n            .pipelineId(buildkite_pipeline.repo2())\n            .teamId(buildkite_team.test().id())\n            .accessLevel(\"MANAGE_BUILD_AND_READ\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  developers:\n    type: buildkite:Pipeline:Team\n    properties:\n      pipelineId: ${buildkite_pipeline.repo2}\n      teamId: ${buildkite_team.test.id}\n      accessLevel: MANAGE_BUILD_AND_READ\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nPipeline teams can be imported using their `GraphQL ID`, e.g.\n\n```sh\n $ pulumi import buildkite:Pipeline/team:Team guests VGVhbS0tLWU1YjQyMDQyLTUzN2QtNDZjNi04MjY0LTliZjFkMzkyYjZkNQ==\n```\n\n Your pipeline team's GraphQL ID can be found with the below GraphQL query below.\n\n graphql query getPipelineTeamId {\n\n pipeline(slug\"ORGANIZATION_SLUG/PIPELINE_SLUG\") { \t\tteams(first5, search\"PIPELINE_SEARCH_TERM\") {\n\n\n\n\n\n edges{\n\n\n\n\n\n\n\n node{\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n}\n\n\n\n\n\n }\n\n\n\n }\n\n } } ","properties":{"accessLevel":{"type":"string","description":"The level of access to grant. Must be one of `READ_ONLY`, `BUILD_AND_READ` or `MANAGE_BUILD_AND_READ`.\n"},"pipelineId":{"type":"string","description":"The GraphQL ID of the pipeline.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team to add to/remove from.\n"},"uuid":{"type":"string","description":"The UUID of the pipeline schedule\n"}},"required":["accessLevel","pipelineId","teamId","uuid"],"inputProperties":{"accessLevel":{"type":"string","description":"The level of access to grant. Must be one of `READ_ONLY`, `BUILD_AND_READ` or `MANAGE_BUILD_AND_READ`.\n"},"pipelineId":{"type":"string","description":"The GraphQL ID of the pipeline.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team to add to/remove from.\n"}},"requiredInputs":["accessLevel","pipelineId","teamId"],"stateInputs":{"description":"Input properties used for looking up and filtering Team resources.\n","properties":{"accessLevel":{"type":"string","description":"The level of access to grant. Must be one of `READ_ONLY`, `BUILD_AND_READ` or `MANAGE_BUILD_AND_READ`.\n"},"pipelineId":{"type":"string","description":"The GraphQL ID of the pipeline.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team to add to/remove from.\n"},"uuid":{"type":"string","description":"The UUID of the pipeline schedule\n"}},"type":"object"}},"buildkite:Team/member:Member":{"description":"## # Resource: team_member\n\nThis resource allows manage team membership for existing organization users.\n\nThe user must already be part of the organization to which you are managing team membership. This will not invite a new user to the organization.\n\nBuildkite Documentation: https://buildkite.com/docs/pipelines/permissions\n\nNote: You must first enable Teams on your organization.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst team = new buildkite.team.Team(\"team\", {\n    privacy: \"VISIBLE\",\n    defaultTeam: true,\n    defaultMemberRole: \"MEMBER\",\n});\nconst aSmith = new buildkite.team.Member(\"aSmith\", {\n    role: \"MEMBER\",\n    teamId: team.id,\n    userId: \"VXNlci0tLWRlOTdmMjBiLWJkZmMtNGNjOC1hOTcwLTY1ODNiZTk2ZGEyYQ==\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\nteam = buildkite.team.Team(\"team\",\n    privacy=\"VISIBLE\",\n    default_team=True,\n    default_member_role=\"MEMBER\")\na_smith = buildkite.team.Member(\"aSmith\",\n    role=\"MEMBER\",\n    team_id=team.id,\n    user_id=\"VXNlci0tLWRlOTdmMjBiLWJkZmMtNGNjOC1hOTcwLTY1ODNiZTk2ZGEyYQ==\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var team = new Buildkite.Team.Team(\"team\", new()\n    {\n        Privacy = \"VISIBLE\",\n        DefaultTeam = true,\n        DefaultMemberRole = \"MEMBER\",\n    });\n\n    var aSmith = new Buildkite.Team.Member(\"aSmith\", new()\n    {\n        Role = \"MEMBER\",\n        TeamId = team.Id,\n        UserId = \"VXNlci0tLWRlOTdmMjBiLWJkZmMtNGNjOC1hOTcwLTY1ODNiZTk2ZGEyYQ==\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Team\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tteam, err := Team.NewTeam(ctx, \"team\", \u0026Team.TeamArgs{\n\t\t\tPrivacy:           pulumi.String(\"VISIBLE\"),\n\t\t\tDefaultTeam:       pulumi.Bool(true),\n\t\t\tDefaultMemberRole: pulumi.String(\"MEMBER\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = Team.NewMember(ctx, \"aSmith\", \u0026Team.MemberArgs{\n\t\t\tRole:   pulumi.String(\"MEMBER\"),\n\t\t\tTeamId: team.ID(),\n\t\t\tUserId: pulumi.String(\"VXNlci0tLWRlOTdmMjBiLWJkZmMtNGNjOC1hOTcwLTY1ODNiZTk2ZGEyYQ==\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Team.Team;\nimport com.pulumi.buildkite.Team.TeamArgs;\nimport com.pulumi.buildkite.Team.Member;\nimport com.pulumi.buildkite.Team.MemberArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var team = new Team(\"team\", TeamArgs.builder()        \n            .privacy(\"VISIBLE\")\n            .defaultTeam(true)\n            .defaultMemberRole(\"MEMBER\")\n            .build());\n\n        var aSmith = new Member(\"aSmith\", MemberArgs.builder()        \n            .role(\"MEMBER\")\n            .teamId(team.id())\n            .userId(\"VXNlci0tLWRlOTdmMjBiLWJkZmMtNGNjOC1hOTcwLTY1ODNiZTk2ZGEyYQ==\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  team:\n    type: buildkite:Team:Team\n    properties:\n      privacy: VISIBLE\n      defaultTeam: true\n      defaultMemberRole: MEMBER\n  aSmith:\n    type: buildkite:Team:Member\n    properties:\n      role: MEMBER\n      teamId: ${team.id}\n      userId: VXNlci0tLWRlOTdmMjBiLWJkZmMtNGNjOC1hOTcwLTY1ODNiZTk2ZGEyYQ==\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTeam members can be imported using the GraphQL ID of the membership. Note this is different to the ID of the user.\n\n```sh\n $ pulumi import buildkite:Team/member:Member a_smith VGVhbU1lbWJlci0tLTVlZDEyMmY2LTM2NjQtNDI1MS04YzMwLTc4NjRiMDdiZDQ4Zg==\n```\n\n To find the ID to use, you can use the GraphQL query below. Alternatively, you could use this [pre-saved query](https://buildkite.com/user/graphql/console/ce4540dd-4f60-4e79-8e8f-9f4c3bc8784e), where you will need fo fill in the organization slug and search terms for teams and members. Both search terms (TEAM_SEARCH_TERM and TEAM_MEMBER_SEARCH_TERM) work on the name of the associated object. graphql query getTeamMemberId {\n\n organization(slug\"ORGANIZATION_SLUG\") {\n\n\n\n teams(first2, search\"TEAM_SEARCH_TERM\") {\n\n\n\n\n\n edges {\n\n\n\n\n\n\n\n node {\n\n\n\n\n\n\n\n\n\n members(first2, search\"TEAM_MEMBER_SEARCH_TERM\") {\n\n\n\n\n\n\n\n\n\n\n\n edges {\n\n\n\n\n\n\n\n\n\n\n\n\n\n node {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n }\n\n\n\n\n\n }\n\n\n\n }\n\n } } ","properties":{"role":{"type":"string","description":"Either MEMBER or MAINTAINER.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team to add to/remove from.\n"},"userId":{"type":"string","description":"The GraphQL ID of the user to add/remove.\n"},"uuid":{"type":"string","description":"The UUID for the team membership.\n"}},"required":["role","teamId","userId","uuid"],"inputProperties":{"role":{"type":"string","description":"Either MEMBER or MAINTAINER.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team to add to/remove from.\n"},"userId":{"type":"string","description":"The GraphQL ID of the user to add/remove.\n"}},"requiredInputs":["role","teamId","userId"],"stateInputs":{"description":"Input properties used for looking up and filtering Member resources.\n","properties":{"role":{"type":"string","description":"Either MEMBER or MAINTAINER.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team to add to/remove from.\n"},"userId":{"type":"string","description":"The GraphQL ID of the user to add/remove.\n"},"uuid":{"type":"string","description":"The UUID for the team membership.\n"}},"type":"object"}},"buildkite:Team/team:Team":{"description":"## # Resource: team\n\nThis resource allows you to create and manage teams.\n\nBuildkite Documentation: https://buildkite.com/docs/pipelines/permissions\n\nNote: You must first enable Teams on your organization.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst team = new buildkite.team.Team(\"team\", {\n    defaultMemberRole: \"MEMBER\",\n    defaultTeam: true,\n    privacy: \"VISIBLE\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\nteam = buildkite.team.Team(\"team\",\n    default_member_role=\"MEMBER\",\n    default_team=True,\n    privacy=\"VISIBLE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var team = new Buildkite.Team.Team(\"team\", new()\n    {\n        DefaultMemberRole = \"MEMBER\",\n        DefaultTeam = true,\n        Privacy = \"VISIBLE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Team\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Team.NewTeam(ctx, \"team\", \u0026Team.TeamArgs{\n\t\t\tDefaultMemberRole: pulumi.String(\"MEMBER\"),\n\t\t\tDefaultTeam:       pulumi.Bool(true),\n\t\t\tPrivacy:           pulumi.String(\"VISIBLE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Team.Team;\nimport com.pulumi.buildkite.Team.TeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var team = new Team(\"team\", TeamArgs.builder()        \n            .defaultMemberRole(\"MEMBER\")\n            .defaultTeam(true)\n            .privacy(\"VISIBLE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  team:\n    type: buildkite:Team:Team\n    properties:\n      defaultMemberRole: MEMBER\n      defaultTeam: true\n      privacy: VISIBLE\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTeams can be imported using the `GraphQL ID` (not UUID), e.g.\n\n```sh\n $ pulumi import buildkite:Team/team:Team fleet UGlwZWxpbmUtLS00MzVjYWQ1OC1lODFkLTQ1YWYtODYzNy1iMWNmODA3MDIzOGQ=\n```\n\n To find the ID to use, you can use the GraphQL query below. Alternatively, you could use this [pre-saved query](https://buildkite.com/user/graphql/console/6e74c89c-4e91-4d1d-92ca-4fb19d0ea453), where you will need fo fill in the organization slug and search term (TEAM_SEARCH_TERM) for the team. graphql query getTeamId {\n\n organization(slug\"ORGANIZATION_SLUG\") {\n\n\n\n teams(first1, search\"TEAM_SEARCH_TERM\") {\n\n\n\n\n\n edges {\n\n\n\n\n\n\n\n node {\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n name\n\n\n\n\n\n\n\n }\n\n\n\n\n\n }\n\n\n\n }\n\n } } ","properties":{"defaultMemberRole":{"type":"string","description":"Default role to assign to a team member.\n"},"defaultTeam":{"type":"boolean","description":"Whether to assign this team to a user by default.\n"},"description":{"type":"string","description":"The description to assign to the team.\n"},"membersCanCreatePipelines":{"type":"boolean","description":"Whether team members can create.\n"},"name":{"type":"string","description":"The name of the team.\n"},"privacy":{"type":"string","description":"The privacy level to set the team too.\n"},"slug":{"type":"string","description":"The name of the team.\n"},"uuid":{"type":"string","description":"The UUID for the team.\n"}},"required":["defaultMemberRole","defaultTeam","membersCanCreatePipelines","name","privacy","slug","uuid"],"inputProperties":{"defaultMemberRole":{"type":"string","description":"Default role to assign to a team member.\n"},"defaultTeam":{"type":"boolean","description":"Whether to assign this team to a user by default.\n"},"description":{"type":"string","description":"The description to assign to the team.\n"},"membersCanCreatePipelines":{"type":"boolean","description":"Whether team members can create.\n"},"name":{"type":"string","description":"The name of the team.\n"},"privacy":{"type":"string","description":"The privacy level to set the team too.\n"}},"requiredInputs":["defaultMemberRole","defaultTeam","privacy"],"stateInputs":{"description":"Input properties used for looking up and filtering Team resources.\n","properties":{"defaultMemberRole":{"type":"string","description":"Default role to assign to a team member.\n"},"defaultTeam":{"type":"boolean","description":"Whether to assign this team to a user by default.\n"},"description":{"type":"string","description":"The description to assign to the team.\n"},"membersCanCreatePipelines":{"type":"boolean","description":"Whether team members can create.\n"},"name":{"type":"string","description":"The name of the team.\n"},"privacy":{"type":"string","description":"The privacy level to set the team too.\n"},"slug":{"type":"string","description":"The name of the team.\n"},"uuid":{"type":"string","description":"The UUID for the team.\n"}},"type":"object"}},"buildkite:TestSuite/team:Team":{"description":"## # Resource: test_suite_team\n\nThis resources allows you to create, manage and import team access to Test Suites.\n\nBuildkite documentation: https://buildkite.com/docs/test-analytics\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst owners = new buildkite.team.Team(\"owners\", {\n    defaultTeam: false,\n    privacy: \"VISIBLE\",\n    defaultMemberRole: \"MAINTAINER\",\n});\nconst viewers = new buildkite.team.Team(\"viewers\", {\n    defaultTeam: false,\n    privacy: \"VISIBLE\",\n    defaultMemberRole: \"MAINTAINER\",\n});\nconst rspecSuite = new buildkite.testsuite.TestSuite(\"rspecSuite\", {\n    defaultBranch: \"main\",\n    teamOwnerId: owners.id,\n});\nconst viewersRspec = new buildkite.testsuite.Team(\"viewersRspec\", {\n    testSuiteId: rspecSuite.id,\n    teamId: viewers.id,\n    accessLevel: \"READ_ONLY\",\n});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\nowners = buildkite.team.Team(\"owners\",\n    default_team=False,\n    privacy=\"VISIBLE\",\n    default_member_role=\"MAINTAINER\")\nviewers = buildkite.team.Team(\"viewers\",\n    default_team=False,\n    privacy=\"VISIBLE\",\n    default_member_role=\"MAINTAINER\")\nrspec_suite = buildkite.test_suite.TestSuite(\"rspecSuite\",\n    default_branch=\"main\",\n    team_owner_id=owners.id)\nviewers_rspec = buildkite.test_suite.Team(\"viewersRspec\",\n    test_suite_id=rspec_suite.id,\n    team_id=viewers.id,\n    access_level=\"READ_ONLY\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var owners = new Buildkite.Team.Team(\"owners\", new()\n    {\n        DefaultTeam = false,\n        Privacy = \"VISIBLE\",\n        DefaultMemberRole = \"MAINTAINER\",\n    });\n\n    var viewers = new Buildkite.Team.Team(\"viewers\", new()\n    {\n        DefaultTeam = false,\n        Privacy = \"VISIBLE\",\n        DefaultMemberRole = \"MAINTAINER\",\n    });\n\n    var rspecSuite = new Buildkite.TestSuite.TestSuite(\"rspecSuite\", new()\n    {\n        DefaultBranch = \"main\",\n        TeamOwnerId = owners.Id,\n    });\n\n    var viewersRspec = new Buildkite.TestSuite.Team(\"viewersRspec\", new()\n    {\n        TestSuiteId = rspecSuite.Id,\n        TeamId = viewers.Id,\n        AccessLevel = \"READ_ONLY\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Team\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/TestSuite\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\towners, err := Team.NewTeam(ctx, \"owners\", \u0026Team.TeamArgs{\n\t\t\tDefaultTeam:       pulumi.Bool(false),\n\t\t\tPrivacy:           pulumi.String(\"VISIBLE\"),\n\t\t\tDefaultMemberRole: pulumi.String(\"MAINTAINER\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tviewers, err := Team.NewTeam(ctx, \"viewers\", \u0026Team.TeamArgs{\n\t\t\tDefaultTeam:       pulumi.Bool(false),\n\t\t\tPrivacy:           pulumi.String(\"VISIBLE\"),\n\t\t\tDefaultMemberRole: pulumi.String(\"MAINTAINER\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\trspecSuite, err := TestSuite.NewTestSuite(ctx, \"rspecSuite\", \u0026TestSuite.TestSuiteArgs{\n\t\t\tDefaultBranch: pulumi.String(\"main\"),\n\t\t\tTeamOwnerId:   owners.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = TestSuite.NewTeam(ctx, \"viewersRspec\", \u0026TestSuite.TeamArgs{\n\t\t\tTestSuiteId: rspecSuite.ID(),\n\t\t\tTeamId:      viewers.ID(),\n\t\t\tAccessLevel: pulumi.String(\"READ_ONLY\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Team.Team;\nimport com.pulumi.buildkite.Team.TeamArgs;\nimport com.pulumi.buildkite.TestSuite.TestSuite;\nimport com.pulumi.buildkite.TestSuite.TestSuiteArgs;\nimport com.pulumi.buildkite.TestSuite.Team;\nimport com.pulumi.buildkite.TestSuite.TeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var owners = new Team(\"owners\", TeamArgs.builder()        \n            .defaultTeam(false)\n            .privacy(\"VISIBLE\")\n            .defaultMemberRole(\"MAINTAINER\")\n            .build());\n\n        var viewers = new Team(\"viewers\", TeamArgs.builder()        \n            .defaultTeam(false)\n            .privacy(\"VISIBLE\")\n            .defaultMemberRole(\"MAINTAINER\")\n            .build());\n\n        var rspecSuite = new TestSuite(\"rspecSuite\", TestSuiteArgs.builder()        \n            .defaultBranch(\"main\")\n            .teamOwnerId(owners.id())\n            .build());\n\n        var viewersRspec = new Team(\"viewersRspec\", TeamArgs.builder()        \n            .testSuiteId(rspecSuite.id())\n            .teamId(viewers.id())\n            .accessLevel(\"READ_ONLY\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  owners:\n    type: buildkite:Team:Team\n    properties:\n      defaultTeam: false\n      privacy: VISIBLE\n      defaultMemberRole: MAINTAINER\n  viewers:\n    type: buildkite:Team:Team\n    properties:\n      defaultTeam: false\n      privacy: VISIBLE\n      defaultMemberRole: MAINTAINER\n  rspecSuite:\n    type: buildkite:TestSuite:TestSuite\n    properties:\n      defaultBranch: main\n      teamOwnerId: ${owners.id}\n  viewersRspec:\n    type: buildkite:TestSuite:Team\n    properties:\n      testSuiteId: ${rspecSuite.id}\n      teamId: ${viewers.id}\n      accessLevel: READ_ONLY\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nTest suite teams can be imported using the `GraphQL ID` (not UUID), e.g.\n\n```sh\n $ pulumi import buildkite:TestSuite/team:Team viewers VGVhbvDf4eRef20tMzIxMGEfYTctNzEF5g00M8f5s6E2YjYtODNlOGNlZgD6HcBi\n```\n\n To find the ID to use, you can use the GraphQL query below. Alternatively, you could use this [pre-saved query](https://buildkite.com/user/graphql/console/e8480014-37a8-4150-a011-6d35f33b4dfd), where you will need fo fill in the organization slug and suite search term (SUITE_SEARCH_TERM) for the particular test suite required. graphql query getTeamSuiteIds {\n\n organization(slug\"ORGANIZATION_SLUG\") {\n\n\n\n suites(first1, search:\"SUITE_SEARCH_TERM\") {\n\n\n\n\n\n edges {\n\n\n\n\n\n\n\n node {\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n name\n\n\n\n\n\n\n\n\n\n teams(first10){\n\n\n\n\n\n\n\n\n\n\n\n edges {\n\n\n\n\n\n\n\n\n\n\n\n\n\n node {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n accessLevel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n team{\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n name\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n }\n\n\n\n\n\n }\n\n\n\n }\n\n } } ","properties":{"accessLevel":{"type":"string","description":"The access level the team has on the test suite. Either READ_ONLY or MANAGE_AND_READ.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team.\n"},"testSuiteId":{"type":"string","description":"The GraphQL ID of the test suite.\n"},"uuid":{"type":"string","description":"This is the UUID of the test suite team.\n"}},"required":["accessLevel","teamId","testSuiteId","uuid"],"inputProperties":{"accessLevel":{"type":"string","description":"The access level the team has on the test suite. Either READ_ONLY or MANAGE_AND_READ.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team.\n"},"testSuiteId":{"type":"string","description":"The GraphQL ID of the test suite.\n"}},"requiredInputs":["accessLevel","teamId","testSuiteId"],"stateInputs":{"description":"Input properties used for looking up and filtering Team resources.\n","properties":{"accessLevel":{"type":"string","description":"The access level the team has on the test suite. Either READ_ONLY or MANAGE_AND_READ.\n"},"teamId":{"type":"string","description":"The GraphQL ID of the team.\n"},"testSuiteId":{"type":"string","description":"The GraphQL ID of the test suite.\n"},"uuid":{"type":"string","description":"This is the UUID of the test suite team.\n"}},"type":"object"}},"buildkite:TestSuite/testSuite:TestSuite":{"description":"## # Resource: test_suite\n\nThis resources allows you to create and manage a Test Suite.\n\nBuildkite documentation: https://buildkite.com/docs/test-analytics\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumiverse/buildkite\";\n\nconst test = new buildkite.team.Team(\"test\", {\n    privacy: \"VISIBLE\",\n    defaultTeam: false,\n    defaultMemberRole: \"MEMBER\",\n});\nconst unitTests = new buildkite.testsuite.TestSuite(\"unitTests\", {\n    defaultBranch: \"main\",\n    teamOwnerId: test.id,\n});\n```\n```python\nimport pulumi\nimport pulumiverse_buildkite as buildkite\n\ntest = buildkite.team.Team(\"test\",\n    privacy=\"VISIBLE\",\n    default_team=False,\n    default_member_role=\"MEMBER\")\nunit_tests = buildkite.test_suite.TestSuite(\"unitTests\",\n    default_branch=\"main\",\n    team_owner_id=test.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumiverse.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = new Buildkite.Team.Team(\"test\", new()\n    {\n        Privacy = \"VISIBLE\",\n        DefaultTeam = false,\n        DefaultMemberRole = \"MEMBER\",\n    });\n\n    var unitTests = new Buildkite.TestSuite.TestSuite(\"unitTests\", new()\n    {\n        DefaultBranch = \"main\",\n        TeamOwnerId = test.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Team\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/TestSuite\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := Team.NewTeam(ctx, \"test\", \u0026Team.TeamArgs{\n\t\t\tPrivacy:           pulumi.String(\"VISIBLE\"),\n\t\t\tDefaultTeam:       pulumi.Bool(false),\n\t\t\tDefaultMemberRole: pulumi.String(\"MEMBER\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = TestSuite.NewTestSuite(ctx, \"unitTests\", \u0026TestSuite.TestSuiteArgs{\n\t\t\tDefaultBranch: pulumi.String(\"main\"),\n\t\t\tTeamOwnerId:   test.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Team.Team;\nimport com.pulumi.buildkite.Team.TeamArgs;\nimport com.pulumi.buildkite.TestSuite.TestSuite;\nimport com.pulumi.buildkite.TestSuite.TestSuiteArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test = new Team(\"test\", TeamArgs.builder()        \n            .privacy(\"VISIBLE\")\n            .defaultTeam(false)\n            .defaultMemberRole(\"MEMBER\")\n            .build());\n\n        var unitTests = new TestSuite(\"unitTests\", TestSuiteArgs.builder()        \n            .defaultBranch(\"main\")\n            .teamOwnerId(test.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test:\n    type: buildkite:Team:Team\n    properties:\n      privacy: VISIBLE\n      defaultTeam: false\n      defaultMemberRole: MEMBER\n  unitTests:\n    type: buildkite:TestSuite:TestSuite\n    properties:\n      defaultBranch: main\n      teamOwnerId: ${test.id}\n```\n{{% /example %}}\n{{% /examples %}}","properties":{"apiToken":{"type":"string","description":"This is the unique API token used when send test results.\n","secret":true},"defaultBranch":{"type":"string","description":"This is the default branch used to compare tests against.\n"},"name":{"type":"string","description":"This is the name of the test suite.\n"},"slug":{"type":"string","description":"This is the unique slug generated from the name upon creation.\n"},"teamOwnerId":{"type":"string","description":"This is a single team linked to the test suite upon creation.\n"},"uuid":{"type":"string","description":"This is the UUID of the suite.\n"}},"required":["apiToken","defaultBranch","name","slug","teamOwnerId","uuid"],"inputProperties":{"defaultBranch":{"type":"string","description":"This is the default branch used to compare tests against.\n"},"name":{"type":"string","description":"This is the name of the test suite.\n"},"teamOwnerId":{"type":"string","description":"This is a single team linked to the test suite upon creation.\n"}},"requiredInputs":["defaultBranch","teamOwnerId"],"stateInputs":{"description":"Input properties used for looking up and filtering TestSuite resources.\n","properties":{"apiToken":{"type":"string","description":"This is the unique API token used when send test results.\n","secret":true},"defaultBranch":{"type":"string","description":"This is the default branch used to compare tests against.\n"},"name":{"type":"string","description":"This is the name of the test suite.\n"},"slug":{"type":"string","description":"This is the unique slug generated from the name upon creation.\n"},"teamOwnerId":{"type":"string","description":"This is a single team linked to the test suite upon creation.\n"},"uuid":{"type":"string","description":"This is the UUID of the suite.\n"}},"type":"object"}}},"functions":{"buildkite:Cluster/getCluster:getCluster":{"inputs":{"description":"A collection of arguments for invoking getCluster.\n","properties":{"name":{"type":"string","description":"The name of the cluster to lookup.\n"}},"type":"object","required":["name"]},"outputs":{"description":"A collection of values returned by getCluster.\n","properties":{"color":{"type":"string","description":"The color given the cluster.\n"},"description":{"type":"string","description":"The description of the cluster.\n"},"emoji":{"type":"string","description":"The emoji given the cluster.\n"},"id":{"type":"string","description":"The GraphQL ID of the cluster.\n"},"name":{"type":"string"},"uuid":{"type":"string","description":"The UUID of the cluster.\n"}},"type":"object","required":["color","description","emoji","id","name","uuid"]}},"buildkite:Organization/getOrganization:getOrganization":{"description":"## # Data Source: organization\n\nUse this data source to look up the organization settings. It currently supports\nallowed_api_ip_addresses.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\nimport * as buildkite from \"@pulumi/buildkite\";\n\nconst testkite = buildkite.Organization.getOrganization({});\nconst fromBuildkite = new aws.ec2.SecurityGroup(\"fromBuildkite\", {ingress: [{\n    fromPort: \"*\",\n    toPort: 443,\n    protocol: \"tcp\",\n    cidrBlocks: data.buildkite_organization.allowed_api_ip_addresses,\n}]});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\nimport pulumi_buildkite as buildkite\n\ntestkite = buildkite.Organization.get_organization()\nfrom_buildkite = aws.ec2.SecurityGroup(\"fromBuildkite\", ingress=[aws.ec2.SecurityGroupIngressArgs(\n    from_port=\"*\",\n    to_port=443,\n    protocol=\"tcp\",\n    cidr_blocks=data[\"buildkite_organization\"][\"allowed_api_ip_addresses\"],\n)])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\nusing Buildkite = Pulumi.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testkite = Buildkite.Organization.GetOrganization.Invoke();\n\n    var fromBuildkite = new Aws.Ec2.SecurityGroup(\"fromBuildkite\", new()\n    {\n        Ingress = new[]\n        {\n            new Aws.Ec2.Inputs.SecurityGroupIngressArgs\n            {\n                FromPort = \"*\",\n                ToPort = 443,\n                Protocol = \"tcp\",\n                CidrBlocks = data.Buildkite_organization.Allowed_api_ip_addresses,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Organization\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Organization.GetOrganization(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ec2.NewSecurityGroup(ctx, \"fromBuildkite\", \u0026ec2.SecurityGroupArgs{\n\t\t\tIngress: ec2.SecurityGroupIngressArray{\n\t\t\t\t\u0026ec2.SecurityGroupIngressArgs{\n\t\t\t\t\tFromPort:   pulumi.Int(\"*\"),\n\t\t\t\t\tToPort:     pulumi.Int(443),\n\t\t\t\t\tProtocol:   pulumi.String(\"tcp\"),\n\t\t\t\t\tCidrBlocks: pulumi.Any(data.Buildkite_organization.Allowed_api_ip_addresses),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Organization.OrganizationFunctions;\nimport com.pulumi.aws.ec2.SecurityGroup;\nimport com.pulumi.aws.ec2.SecurityGroupArgs;\nimport com.pulumi.aws.ec2.inputs.SecurityGroupIngressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var testkite = OrganizationFunctions.getOrganization();\n\n        var fromBuildkite = new SecurityGroup(\"fromBuildkite\", SecurityGroupArgs.builder()        \n            .ingress(SecurityGroupIngressArgs.builder()\n                .fromPort(\"*\")\n                .toPort(\"443\")\n                .protocol(\"tcp\")\n                .cidrBlocks(data.buildkite_organization().allowed_api_ip_addresses())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  fromBuildkite:\n    type: aws:ec2:SecurityGroup\n    properties:\n      ingress:\n        - fromPort: '*'\n          toPort: '443'\n          protocol: tcp\n          cidrBlocks: ${data.buildkite_organization.allowed_api_ip_addresses}\nvariables:\n  testkite:\n    fn::invoke:\n      Function: buildkite:Organization:getOrganization\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}","outputs":{"description":"A collection of values returned by getOrganization.\n","properties":{"allowedApiIpAddresses":{"type":"array","items":{"type":"string"},"description":"list of IP addresses in CIDR format that are allowed to access the Buildkite API.\n"},"id":{"type":"string"},"uuid":{"type":"string"}},"type":"object","required":["allowedApiIpAddresses","id","uuid"]}},"buildkite:Pipeline/getPipeline:getPipeline":{"description":"## # Data Source: pipeline\n\nUse this data source to look up properties on a specific pipeline. This is\nparticularly useful for looking up the webhook URL for each pipeline.\n\nBuildkite Documentation: https://buildkite.com/docs/pipelines\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumi/buildkite\";\n\nconst repo2 = buildkite.Pipeline.getPipeline({\n    slug: \"repo2\",\n});\n```\n```python\nimport pulumi\nimport pulumi_buildkite as buildkite\n\nrepo2 = buildkite.Pipeline.get_pipeline(slug=\"repo2\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumi.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var repo2 = Buildkite.Pipeline.GetPipeline.Invoke(new()\n    {\n        Slug = \"repo2\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Pipeline\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Pipeline.GetPipeline(ctx, \u0026pipeline.GetPipelineArgs{\n\t\t\tSlug: \"repo2\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Pipeline.PipelineFunctions;\nimport com.pulumi.buildkite.Pipeline.inputs.GetPipelineArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var repo2 = PipelineFunctions.getPipeline(GetPipelineArgs.builder()\n            .slug(\"repo2\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  repo2:\n    fn::invoke:\n      Function: buildkite:Pipeline:getPipeline\n      Arguments:\n        slug: repo2\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getPipeline.\n","properties":{"slug":{"type":"string","description":"The slug of the pipeline, available in the URL of the pipeline on buildkite.com\n"}},"type":"object","required":["slug"]},"outputs":{"description":"A collection of values returned by getPipeline.\n","properties":{"defaultBranch":{"type":"string","description":"The default branch to prefill when new builds are created or triggered, usually main or master but can be anything.\n"},"description":{"type":"string","description":"A description of the pipeline.\n"},"id":{"type":"string"},"name":{"type":"string","description":"The name of the pipeline.\n"},"repository":{"type":"string","description":"The git URL of the repository.\n"},"slug":{"type":"string"},"webhookUrl":{"type":"string","description":"The Buildkite webhook URL that triggers builds on this pipeline.\n"}},"type":"object","required":["defaultBranch","description","id","name","repository","slug","webhookUrl"]}},"buildkite:Team/getTeam:getTeam":{"description":"## # Data Source: team\n\nUse this data source to look up properties of a team. This can be used to\nvalidate that a team exists before setting the team slug on a pipeline.\n\nBuildkite documentation: https://buildkite.com/docs/pipelines/permissions\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as buildkite from \"@pulumi/buildkite\";\n\nconst myTeamData = buildkite.Team.getTeam({\n    id: \"\u003cteam id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_buildkite as buildkite\n\nmy_team_data = buildkite.Team.get_team(id=\"\u003cteam id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Buildkite = Pulumi.Buildkite;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myTeamData = Buildkite.Team.GetTeam.Invoke(new()\n    {\n        Id = \"\u003cteam id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n\t\"github.com/pulumiverse/pulumi-buildkite/sdk/v2/go/buildkite/Team\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Team.GetTeam(ctx, \u0026team.GetTeamArgs{\n\t\t\tId: pulumi.StringRef(\"\u003cteam id\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.buildkite.Team.TeamFunctions;\nimport com.pulumi.buildkite.Team.inputs.GetTeamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myTeamData = TeamFunctions.getTeam(GetTeamArgs.builder()\n            .id(\"\u003cteam id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myTeamData:\n    fn::invoke:\n      Function: buildkite:Team:getTeam\n      Arguments:\n        id: \u003cteam id\u003e\n```\n{{% /example %}}\n{{% /examples %}}","inputs":{"description":"A collection of arguments for invoking getTeam.\n","properties":{"id":{"type":"string","description":"The GraphQL ID of the team, available in the Settings page for the team.\n"},"slug":{"type":"string","description":"The slug of the team. Available in the URL of the team on buildkite.com; in the format\n\"\u003corganizaton/team-name\u003e\"\n\nThe `team` data-source supports **either** the use of `id` or `slug` for lookup of a team.\n"}},"type":"object"},"outputs":{"description":"A collection of values returned by getTeam.\n","properties":{"defaultMemberRole":{"type":"string","description":"Default role to assign to a team member\n"},"defaultTeam":{"type":"boolean","description":"Whether new org members will be automatically added to this team\n"},"description":{"type":"string","description":"A description of the team\n"},"id":{"type":"string","description":"The GraphQL ID of the team\n"},"membersCanCreatePipelines":{"type":"boolean","description":"Whether team members can create new pipelines and add them to the team\n"},"name":{"type":"string","description":"The name of the team\n"},"privacy":{"type":"string","description":"Whether the team is visible to org members outside this team\n"},"slug":{"type":"string"},"uuid":{"type":"string","description":"The UUID of the team\n"}},"type":"object","required":["defaultMemberRole","defaultTeam","description","id","membersCanCreatePipelines","name","privacy","slug","uuid"]}},"buildkite:index/getMeta:getMeta":{"outputs":{"description":"A collection of values returned by getMeta.\n","properties":{"id":{"type":"string"},"webhookIps":{"type":"array","items":{"type":"string"},"description":"A list of strings, each one an IP address (x.x.x.x) or CIDR address (x.x.x.x/32) that Buildkite may use to send webhooks and other external requests.\n"}},"type":"object","required":["id","webhookIps"]}}}}